{"version":3,"sources":["../../../../node_modules/babel-preset-env/lib/targets-parser.js"],"names":["exports","__esModule","_browserslist","require","_browserslist2","_interopRequireDefault","_semver","_semver2","_utils","obj","default","browserNameMap","android","chrome","and_chr","edge","firefox","ie","ios_saf","safari","isBrowsersQueryValid","browsers","Array","isArray","semverMin","first","second","lt","getLowestVersions","reduce","all","browser","_browser$split","split","browserName","browserVersion","normalizedBrowserName","splitVersion","parsedBrowserVersion","semverify","e","outputDecimalWarning","decimalTargets","length","console","log","forEach","_ref","target","value","targetParserMap","__default","node","parsed","process","versions","uglify","getTargets","targets","arguments","undefined","targetOpts","Object","keys","results","decimalWarnings","push","parser","_parser","parsedTarget","parsedValue"],"mappings":"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","file":"targets-parser.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _browserslist = require(\"browserslist\");\n\nvar _browserslist2 = _interopRequireDefault(_browserslist);\n\nvar _semver = require(\"semver\");\n\nvar _semver2 = _interopRequireDefault(_semver);\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar browserNameMap = {\n  android: \"android\",\n  chrome: \"chrome\",\n  and_chr: \"chrome\",\n  edge: \"edge\",\n  firefox: \"firefox\",\n  ie: \"ie\",\n  ios_saf: \"ios\",\n  safari: \"safari\"\n};\n\nvar isBrowsersQueryValid = function isBrowsersQueryValid(browsers) {\n  return typeof browsers === \"string\" || Array.isArray(browsers);\n};\n\nvar semverMin = function semverMin(first, second) {\n  return first && _semver2.default.lt(first, second) ? first : second;\n};\n\nvar getLowestVersions = function getLowestVersions(browsers) {\n  return browsers.reduce(function (all, browser) {\n    var _browser$split = browser.split(\" \"),\n        browserName = _browser$split[0],\n        browserVersion = _browser$split[1];\n\n    var normalizedBrowserName = browserNameMap[browserName];\n\n    if (!normalizedBrowserName) {\n      return all;\n    }\n\n    try {\n      // Browser version can return as \"10.0-10.2\"\n      var splitVersion = browserVersion.split(\"-\")[0];\n      var parsedBrowserVersion = (0, _utils.semverify)(splitVersion);\n\n      all[normalizedBrowserName] = semverMin(all[normalizedBrowserName], parsedBrowserVersion);\n    } catch (e) {}\n\n    return all;\n  }, {});\n};\n\nvar outputDecimalWarning = function outputDecimalWarning(decimalTargets) {\n  if (!decimalTargets || !decimalTargets.length) {\n    return;\n  }\n\n  console.log(\"Warning, the following targets are using a decimal version:\");\n  console.log(\"\");\n  decimalTargets.forEach(function (_ref) {\n    var target = _ref.target,\n        value = _ref.value;\n    return console.log(\"  \" + target + \": \" + value);\n  });\n  console.log(\"\");\n  console.log(\"We recommend using a string for minor/patch versions to avoid numbers like 6.10\");\n  console.log(\"getting parsed as 6.1, which can lead to unexpected behavior.\");\n  console.log(\"\");\n};\n\nvar targetParserMap = {\n  __default: function __default(target, value) {\n    return [target, (0, _utils.semverify)(value)];\n  },\n\n  // Parse `node: true` and `node: \"current\"` to version\n  node: function node(target, value) {\n    var parsed = value === true || value === \"current\" ? process.versions.node : (0, _utils.semverify)(value);\n\n    return [target, parsed];\n  },\n\n  // Only valid value for Uglify is `true`\n  uglify: function uglify(target, value) {\n    return [target, value === true];\n  }\n};\n\nvar getTargets = function getTargets() {\n  var targets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var targetOpts = {};\n\n  // Parse browsers target via browserslist\n  if (isBrowsersQueryValid(targets.browsers)) {\n    targetOpts = getLowestVersions((0, _browserslist2.default)(targets.browsers));\n  }\n\n  // Parse remaining targets\n  var parsed = Object.keys(targets).reduce(function (results, target) {\n    if (target !== \"browsers\") {\n      var value = targets[target];\n\n      // Warn when specifying minor/patch as a decimal\n      if (typeof value === \"number\" && value % 1 !== 0) {\n        results.decimalWarnings.push({ target: target, value: value });\n      }\n\n      // Check if we have a target parser?\n      var parser = targetParserMap[target] || targetParserMap.__default;\n\n      var _parser = parser(target, value),\n          parsedTarget = _parser[0],\n          parsedValue = _parser[1];\n\n      if (parsedValue) {\n        results.targets[parsedTarget] = parsedValue;\n      }\n    }\n\n    return results;\n  }, {\n    targets: targetOpts,\n    decimalWarnings: []\n  });\n\n  outputDecimalWarning(parsed.decimalWarnings);\n\n  return parsed.targets;\n};\n\nexports.default = getTargets;"]}