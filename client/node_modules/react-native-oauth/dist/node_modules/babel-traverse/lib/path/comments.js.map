{"version":3,"sources":["../../../../../node_modules/babel-traverse/lib/path/comments.js"],"names":["exports","__esModule","shareCommentsWithSiblings","addComment","addComments","key","node","trailing","trailingComments","leading","leadingComments","prev","getSibling","next","type","content","line","value","comments","concat"],"mappings":"AAAA;;AAEAA,QAAQC,UAAR,GAAqB,IAArB;AACAD,QAAQE,yBAAR,GAAoCA,yBAApC;AACAF,QAAQG,UAAR,GAAqBA,UAArB;AACAH,QAAQI,WAAR,GAAsBA,WAAtB;AACA,SAASF,yBAAT,GAAqC;AACnC,MAAI,OAAO,KAAKG,GAAZ,KAAoB,QAAxB,EAAkC;;AAElC,MAAIC,OAAO,KAAKA,IAAhB;AACA,MAAI,CAACA,IAAL,EAAW;;AAEX,MAAIC,WAAWD,KAAKE,gBAApB;AACA,MAAIC,UAAUH,KAAKI,eAAnB;AACA,MAAI,CAACH,QAAD,IAAa,CAACE,OAAlB,EAA2B;;AAE3B,MAAIE,OAAO,KAAKC,UAAL,CAAgB,KAAKP,GAAL,GAAW,CAA3B,CAAX;AACA,MAAIQ,OAAO,KAAKD,UAAL,CAAgB,KAAKP,GAAL,GAAW,CAA3B,CAAX;;AAEA,MAAI,CAACM,KAAKL,IAAV,EAAgBK,OAAOE,IAAP;AAChB,MAAI,CAACA,KAAKP,IAAV,EAAgBO,OAAOF,IAAP;;AAEhBA,OAAKP,WAAL,CAAiB,UAAjB,EAA6BK,OAA7B;AACAI,OAAKT,WAAL,CAAiB,SAAjB,EAA4BG,QAA5B;AACD;;AAED,SAASJ,UAAT,CAAoBW,IAApB,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACvC,OAAKZ,WAAL,CAAiBU,IAAjB,EAAuB,CAAC;AACtBA,UAAME,OAAO,aAAP,GAAuB,cADP;AAEtBC,WAAOF;AAFe,GAAD,CAAvB;AAID;;AAED,SAASX,WAAT,CAAqBU,IAArB,EAA2BI,QAA3B,EAAqC;AACnC,MAAI,CAACA,QAAL,EAAe;;AAEf,MAAIZ,OAAO,KAAKA,IAAhB;AACA,MAAI,CAACA,IAAL,EAAW;;AAEX,MAAID,MAAMS,OAAO,UAAjB;;AAEA,MAAIR,KAAKD,GAAL,CAAJ,EAAe;AACbC,SAAKD,GAAL,IAAYC,KAAKD,GAAL,EAAUc,MAAV,CAAiBD,QAAjB,CAAZ;AACD,GAFD,MAEO;AACLZ,SAAKD,GAAL,IAAYa,QAAZ;AACD;AACF","file":"comments.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var trailing = node.trailingComments;\n  var leading = node.leadingComments;\n  if (!trailing && !leading) return;\n\n  var prev = this.getSibling(this.key - 1);\n  var next = this.getSibling(this.key + 1);\n\n  if (!prev.node) prev = next;\n  if (!next.node) next = prev;\n\n  prev.addComments(\"trailing\", leading);\n  next.addComments(\"leading\", trailing);\n}\n\nfunction addComment(type, content, line) {\n  this.addComments(type, [{\n    type: line ? \"CommentLine\" : \"CommentBlock\",\n    value: content\n  }]);\n}\n\nfunction addComments(type, comments) {\n  if (!comments) return;\n\n  var node = this.node;\n  if (!node) return;\n\n  var key = type + \"Comments\";\n\n  if (node[key]) {\n    node[key] = node[key].concat(comments);\n  } else {\n    node[key] = comments;\n  }\n}"]}