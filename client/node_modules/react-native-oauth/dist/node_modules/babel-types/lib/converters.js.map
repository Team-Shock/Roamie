{"version":3,"sources":["../../../../node_modules/babel-types/lib/converters.js"],"names":["exports","__esModule","_maxSafeInteger","require","_maxSafeInteger2","_interopRequireDefault","_stringify","_stringify2","_getIterator2","_getIterator3","toComputedKey","toSequenceExpression","toKeyAlias","toIdentifier","toBindingIdentifierName","toStatement","toExpression","toBlock","valueToNode","_isPlainObject","_isPlainObject2","_isRegExp","_isRegExp2","_index","t","_interopRequireWildcard","obj","newObj","key","Object","prototype","hasOwnProperty","call","default","node","arguments","length","undefined","property","computed","isIdentifier","stringLiteral","name","gatherSequenceExpressions","nodes","scope","declars","exprs","ensureLastUndefined","_iterator","_isArray","Array","isArray","_i","_ref","next","done","value","isExpression","push","isExpressionStatement","expression","isVariableDeclaration","kind","_iterator2","declarations","_isArray2","_i2","_ref2","declar","bindings","getBindingIdentifiers","id","init","assignmentExpression","isIfStatement","consequent","buildUndefinedNode","alternate","conditionalExpression","test","isBlockStatement","body","isEmptyStatement","sequenceExpression","result","_iterator3","_isArray3","_i3","_ref3","alias","increment","isStringLiteral","removePropertiesDeep","cloneDeep","static","uid","replace","match","c","toUpperCase","isValidIdentifier","ignore","isStatement","mustHaveId","newType","isClass","isFunction","isAssignmentExpression","expressionStatement","Error","type","parent","returnStatement","blockStatement","identifier","booleanLiteral","nullLiteral","numericLiteral","pattern","source","flags","toString","regExpLiteral","arrayExpression","map","props","nodeKey","objectProperty","objectExpression"],"mappings":"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","file":"converters.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _maxSafeInteger = require(\"babel-runtime/core-js/number/max-safe-integer\");\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _isPlainObject = require(\"lodash/isPlainObject\");\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isRegExp = require(\"lodash/isRegExp\");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toComputedKey(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key || node.property;\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n  return key;\n}\n\nfunction gatherSequenceExpressions(nodes, scope, declars) {\n  var exprs = [];\n  var ensureLastUndefined = true;\n\n  for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var node = _ref;\n\n    ensureLastUndefined = false;\n\n    if (t.isExpression(node)) {\n      exprs.push(node);\n    } else if (t.isExpressionStatement(node)) {\n      exprs.push(node.expression);\n    } else if (t.isVariableDeclaration(node)) {\n      if (node.kind !== \"var\") return;\n\n      for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var declar = _ref2;\n\n        var bindings = t.getBindingIdentifiers(declar);\n        for (var key in bindings) {\n          declars.push({\n            kind: node.kind,\n            id: bindings[key]\n          });\n        }\n\n        if (declar.init) {\n          exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n        }\n      }\n\n      ensureLastUndefined = true;\n    } else if (t.isIfStatement(node)) {\n      var consequent = node.consequent ? gatherSequenceExpressions([node.consequent], scope, declars) : scope.buildUndefinedNode();\n      var alternate = node.alternate ? gatherSequenceExpressions([node.alternate], scope, declars) : scope.buildUndefinedNode();\n      if (!consequent || !alternate) return;\n\n      exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n    } else if (t.isBlockStatement(node)) {\n      var body = gatherSequenceExpressions(node.body, scope, declars);\n      if (!body) return;\n\n      exprs.push(body);\n    } else if (t.isEmptyStatement(node)) {\n      ensureLastUndefined = true;\n    } else {\n      return;\n    }\n  }\n\n  if (ensureLastUndefined) {\n    exprs.push(scope.buildUndefinedNode());\n  }\n\n  if (exprs.length === 1) {\n    return exprs[0];\n  } else {\n    return t.sequenceExpression(exprs);\n  }\n}\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var result = gatherSequenceExpressions(nodes, scope, declars);\n  if (!result) return;\n\n  for (var _iterator3 = declars, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : (0, _getIterator3.default)(_iterator3);;) {\n    var _ref3;\n\n    if (_isArray3) {\n      if (_i3 >= _iterator3.length) break;\n      _ref3 = _iterator3[_i3++];\n    } else {\n      _i3 = _iterator3.next();\n      if (_i3.done) break;\n      _ref3 = _i3.value;\n    }\n\n    var declar = _ref3;\n\n    scope.push(declar);\n  }\n\n  return result;\n}\n\nfunction toKeyAlias(node) {\n  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : node.key;\n\n  var alias = void 0;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (t.isIdentifier(key)) {\n    alias = key.name;\n  } else if (t.isStringLiteral(key)) {\n    alias = (0, _stringify2.default)(key.value);\n  } else {\n    alias = (0, _stringify2.default)(t.removePropertiesDeep(t.cloneDeep(key)));\n  }\n\n  if (node.computed) {\n    alias = \"[\" + alias + \"]\";\n  }\n\n  if (node.static) {\n    alias = \"static:\" + alias;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name) {\n  name = name + \"\";\n\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = void 0;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!t.isExpression(node)) {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n\n  return node;\n}\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value) {\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  if (typeof value === \"string\") {\n    return t.stringLiteral(value);\n  }\n\n  if (typeof value === \"number\") {\n    return t.numericLiteral(value);\n  }\n\n  if ((0, _isRegExp2.default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  if ((0, _isPlainObject2.default)(value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = void 0;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]}