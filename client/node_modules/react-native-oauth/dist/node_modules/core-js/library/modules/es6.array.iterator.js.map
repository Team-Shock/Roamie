{"version":3,"sources":["../../../../../node_modules/core-js/library/modules/es6.array.iterator.js"],"names":["addToUnscopables","require","step","Iterators","toIObject","module","exports","Array","iterated","kind","_t","_i","_k","O","index","length","undefined","Arguments"],"mappings":"AAAA;;AACA,IAAIA,mBAAmBC,QAAQ,uBAAR,CAAvB;AACA,IAAIC,OAAOD,QAAQ,cAAR,CAAX;AACA,IAAIE,YAAYF,QAAQ,cAAR,CAAhB;AACA,IAAIG,YAAYH,QAAQ,eAAR,CAAhB;;AAEA;AACA;AACA;AACA;AACAI,OAAOC,OAAP,GAAiBL,QAAQ,gBAAR,EAA0BM,KAA1B,EAAiC,OAAjC,EAA0C,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AACnF,OAAKC,EAAL,GAAUN,UAAUI,QAAV,CAAV,CADmF,CACpD;AAC/B,OAAKG,EAAL,GAAU,CAAV,CAFmF,CAEpD;AAC/B,OAAKC,EAAL,GAAUH,IAAV,CAHmF,CAGpD;AACjC;AACC,CALgB,EAKd,YAAY;AACb,MAAII,IAAI,KAAKH,EAAb;AACA,MAAID,OAAO,KAAKG,EAAhB;AACA,MAAIE,QAAQ,KAAKH,EAAL,EAAZ;AACA,MAAI,CAACE,CAAD,IAAMC,SAASD,EAAEE,MAArB,EAA6B;AAC3B,SAAKL,EAAL,GAAUM,SAAV;AACA,WAAOd,KAAK,CAAL,CAAP;AACD;AACD,MAAIO,QAAQ,MAAZ,EAAoB,OAAOP,KAAK,CAAL,EAAQY,KAAR,CAAP;AACpB,MAAIL,QAAQ,QAAZ,EAAsB,OAAOP,KAAK,CAAL,EAAQW,EAAEC,KAAF,CAAR,CAAP;AACtB,SAAOZ,KAAK,CAAL,EAAQ,CAACY,KAAD,EAAQD,EAAEC,KAAF,CAAR,CAAR,CAAP;AACD,CAhBgB,EAgBd,QAhBc,CAAjB;;AAkBA;AACAX,UAAUc,SAAV,GAAsBd,UAAUI,KAAhC;;AAEAP,iBAAiB,MAAjB;AACAA,iBAAiB,QAAjB;AACAA,iBAAiB,SAAjB","file":"es6.array.iterator.js","sourcesContent":["'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n"]}