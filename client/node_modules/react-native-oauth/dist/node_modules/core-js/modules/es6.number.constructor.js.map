{"version":3,"sources":["../../../../node_modules/core-js/modules/es6.number.constructor.js"],"names":["global","require","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","NUMBER","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","first","charCodeAt","third","radix","maxCode","NaN","digits","slice","i","l","code","parseInt","Number","value","arguments","that","valueOf","call","keys","split","j","key","constructor"],"mappings":"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","file":"es6.number.constructor.js","sourcesContent":["'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"]}