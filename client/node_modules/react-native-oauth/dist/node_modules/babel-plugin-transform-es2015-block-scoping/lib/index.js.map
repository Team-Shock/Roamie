{"version":3,"sources":["../../../../node_modules/babel-plugin-transform-es2015-block-scoping/lib/index.js"],"names":["exports","__esModule","_symbol","require","_symbol2","_interopRequireDefault","_create","_create2","_classCallCheck2","_classCallCheck3","default","visitor","VariableDeclaration","path","file","node","parent","scope","isBlockScoped","convertBlockScopedToVar","_tdzThis","nodes","i","declarations","length","decl","init","assign","t","assignmentExpression","id","_ignoreBlockScopingTDZ","push","expressionStatement","addHelper","_blockHoist","isCompletionRecord","buildUndefinedNode","replaceWithMultiple","Loop","ensureBlock","blockScoping","BlockScoping","get","replace","run","replaceWith","CatchClause","BlockStatementSwitchStatementProgram","ignoreBlock","_babelTraverse","_babelTraverse2","_tdz","_babelTypes","_interopRequireWildcard","_values","_values2","_extend","_extend2","_babelTemplate","_babelTemplate2","obj","newObj","key","Object","prototype","hasOwnProperty","call","isLoop","isCatchClause","buildRetCheck","isVariableDeclaration","BLOCK_SCOPED_SYMBOL","kind","moveBindingsToParent","arguments","undefined","isFor","declar","parentScope","getFunctionParent","ids","getBindingIdentifiers","name","binding","getOwnBinding","moveBindingTo","isVar","letReferenceBlockVisitor","visitors","merge","enter","state","loopDepth","exit","Function","traverse","letReferenceFunctionVisitor","skip","ReferencedIdentifier","ref","letReferences","localBinding","getBindingIdentifier","closurify","hoistVarDeclarationsVisitor","self","isForStatement","pushDeclar","sequenceExpression","left","map","expr","isFunction","loopLabelVisitor","LabeledStatement","_ref","innerLabels","label","continuationVisitor","isAssignmentExpression","isUpdateExpression","bindings","outsideReferences","reassignments","loopNodeTo","isBreakStatement","isContinueStatement","loopVisitor","oldIgnoreLabeless","ignoreLabeless","SwitchCase","oldInSwitchCase","inSwitchCase","BreakStatementContinueStatementReturnStatement","LOOP_IGNORE","loopText","indexOf","isSwitchCase","hasBreakContinue","stringLiteral","isReturnStatement","hasReturn","objectExpression","objectProperty","identifier","argument","returnStatement","inherits","loopPath","blockPath","block","outsideLetReferences","hasLetReferences","body","loopParent","loopLabel","isLabeledStatement","loop","_letDone","needsClosure","getLetReferences","isProgram","updateScopeInfo","wrapClosure","remap","labeledStatement","wrappedInClosure","letRefs","getBinding","removeBinding","parentHasBinding","hasGlobal","hasOwnBinding","rename","opts","throwIfClosureRequired","buildCodeFrameError","outsideRefs","has","checkLoop","hoistVarDeclarations","params","args","isSwitch","isSwitchStatement","fn","functionExpression","blockStatement","shadow","addContinuations","generateUidIdentifier","insertBefore","variableDeclaration","variableDeclarator","callExpression","ret","hasYield","hasType","FUNCTION_TYPES","generator","yieldExpression","hasAsync","async","awaitExpression","buildClosure","buildHas","param","newParam","_this","declarators","addDeclarationsFromChild","isClassDeclaration","isFunctionDeclaration","concat","declarPath","cases","_i","consequents","consequent","j","_declarPath","_i2","_declar","keys","loopOrFunctionParent","find","declars","names","retCheck","RETURN","switchCase","single","ifStatement","binaryExpression","test","caseConsequent","switchStatement","module"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _symbol = require(\"babel-runtime/core-js/symbol\");\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _create = require(\"babel-runtime/core-js/object/create\");\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nexports.default = function () {\n  return {\n    visitor: {\n      VariableDeclaration: function VariableDeclaration(path, file) {\n        var node = path.node,\n            parent = path.parent,\n            scope = path.scope;\n\n        if (!isBlockScoped(node)) return;\n        convertBlockScopedToVar(path, null, parent, scope, true);\n\n        if (node._tdzThis) {\n          var nodes = [node];\n\n          for (var i = 0; i < node.declarations.length; i++) {\n            var decl = node.declarations[i];\n            if (decl.init) {\n              var assign = t.assignmentExpression(\"=\", decl.id, decl.init);\n              assign._ignoreBlockScopingTDZ = true;\n              nodes.push(t.expressionStatement(assign));\n            }\n            decl.init = file.addHelper(\"temporalUndefined\");\n          }\n\n          node._blockHoist = 2;\n\n          if (path.isCompletionRecord()) {\n            nodes.push(t.expressionStatement(scope.buildUndefinedNode()));\n          }\n\n          path.replaceWithMultiple(nodes);\n        }\n      },\n      Loop: function Loop(path, file) {\n        var node = path.node,\n            parent = path.parent,\n            scope = path.scope;\n\n        t.ensureBlock(node);\n        var blockScoping = new BlockScoping(path, path.get(\"body\"), parent, scope, file);\n        var replace = blockScoping.run();\n        if (replace) path.replaceWith(replace);\n      },\n      CatchClause: function CatchClause(path, file) {\n        var parent = path.parent,\n            scope = path.scope;\n\n        var blockScoping = new BlockScoping(null, path.get(\"body\"), parent, scope, file);\n        blockScoping.run();\n      },\n      \"BlockStatement|SwitchStatement|Program\": function BlockStatementSwitchStatementProgram(path, file) {\n        if (!ignoreBlock(path)) {\n          var blockScoping = new BlockScoping(null, path, path.parent, path.scope, file);\n          blockScoping.run();\n        }\n      }\n    }\n  };\n};\n\nvar _babelTraverse = require(\"babel-traverse\");\n\nvar _babelTraverse2 = _interopRequireDefault(_babelTraverse);\n\nvar _tdz = require(\"./tdz\");\n\nvar _babelTypes = require(\"babel-types\");\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nvar _values = require(\"lodash/values\");\n\nvar _values2 = _interopRequireDefault(_values);\n\nvar _extend = require(\"lodash/extend\");\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _babelTemplate = require(\"babel-template\");\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ignoreBlock(path) {\n  return t.isLoop(path.parent) || t.isCatchClause(path.parent);\n}\n\nvar buildRetCheck = (0, _babelTemplate2.default)(\"\\n  if (typeof RETURN === \\\"object\\\") return RETURN.v;\\n\");\n\nfunction isBlockScoped(node) {\n  if (!t.isVariableDeclaration(node)) return false;\n  if (node[t.BLOCK_SCOPED_SYMBOL]) return true;\n  if (node.kind !== \"let\" && node.kind !== \"const\") return false;\n  return true;\n}\n\nfunction convertBlockScopedToVar(path, node, parent, scope) {\n  var moveBindingsToParent = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  if (!node) {\n    node = path.node;\n  }\n\n  if (!t.isFor(parent)) {\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      declar.init = declar.init || scope.buildUndefinedNode();\n    }\n  }\n\n  node[t.BLOCK_SCOPED_SYMBOL] = true;\n  node.kind = \"var\";\n\n  if (moveBindingsToParent) {\n    var parentScope = scope.getFunctionParent();\n    var ids = path.getBindingIdentifiers();\n    for (var name in ids) {\n      var binding = scope.getOwnBinding(name);\n      if (binding) binding.kind = \"var\";\n      scope.moveBindingTo(name, parentScope);\n    }\n  }\n}\n\nfunction isVar(node) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !isBlockScoped(node);\n}\n\nvar letReferenceBlockVisitor = _babelTraverse2.default.visitors.merge([{\n  Loop: {\n    enter: function enter(path, state) {\n      state.loopDepth++;\n    },\n    exit: function exit(path, state) {\n      state.loopDepth--;\n    }\n  },\n  Function: function Function(path, state) {\n    if (state.loopDepth > 0) {\n      path.traverse(letReferenceFunctionVisitor, state);\n    }\n    return path.skip();\n  }\n}, _tdz.visitor]);\n\nvar letReferenceFunctionVisitor = _babelTraverse2.default.visitors.merge([{\n  ReferencedIdentifier: function ReferencedIdentifier(path, state) {\n    var ref = state.letReferences[path.node.name];\n\n    if (!ref) return;\n\n    var localBinding = path.scope.getBindingIdentifier(path.node.name);\n    if (localBinding && localBinding !== ref) return;\n\n    state.closurify = true;\n  }\n}, _tdz.visitor]);\n\nvar hoistVarDeclarationsVisitor = {\n  enter: function enter(path, self) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (path.isForStatement()) {\n      if (isVar(node.init, node)) {\n        var nodes = self.pushDeclar(node.init);\n        if (nodes.length === 1) {\n          node.init = nodes[0];\n        } else {\n          node.init = t.sequenceExpression(nodes);\n        }\n      }\n    } else if (path.isFor()) {\n      if (isVar(node.left, node)) {\n        self.pushDeclar(node.left);\n        node.left = node.left.declarations[0].id;\n      }\n    } else if (isVar(node, parent)) {\n      path.replaceWithMultiple(self.pushDeclar(node).map(function (expr) {\n        return t.expressionStatement(expr);\n      }));\n    } else if (path.isFunction()) {\n      return path.skip();\n    }\n  }\n};\n\nvar loopLabelVisitor = {\n  LabeledStatement: function LabeledStatement(_ref, state) {\n    var node = _ref.node;\n\n    state.innerLabels.push(node.label.name);\n  }\n};\n\nvar continuationVisitor = {\n  enter: function enter(path, state) {\n    if (path.isAssignmentExpression() || path.isUpdateExpression()) {\n      var bindings = path.getBindingIdentifiers();\n      for (var name in bindings) {\n        if (state.outsideReferences[name] !== path.scope.getBindingIdentifier(name)) continue;\n        state.reassignments[name] = true;\n      }\n    }\n  }\n};\n\nfunction loopNodeTo(node) {\n  if (t.isBreakStatement(node)) {\n    return \"break\";\n  } else if (t.isContinueStatement(node)) {\n    return \"continue\";\n  }\n}\n\nvar loopVisitor = {\n  Loop: function Loop(path, state) {\n    var oldIgnoreLabeless = state.ignoreLabeless;\n    state.ignoreLabeless = true;\n    path.traverse(loopVisitor, state);\n    state.ignoreLabeless = oldIgnoreLabeless;\n    path.skip();\n  },\n  Function: function Function(path) {\n    path.skip();\n  },\n  SwitchCase: function SwitchCase(path, state) {\n    var oldInSwitchCase = state.inSwitchCase;\n    state.inSwitchCase = true;\n    path.traverse(loopVisitor, state);\n    state.inSwitchCase = oldInSwitchCase;\n    path.skip();\n  },\n  \"BreakStatement|ContinueStatement|ReturnStatement\": function BreakStatementContinueStatementReturnStatement(path, state) {\n    var node = path.node,\n        parent = path.parent,\n        scope = path.scope;\n\n    if (node[this.LOOP_IGNORE]) return;\n\n    var replace = void 0;\n    var loopText = loopNodeTo(node);\n\n    if (loopText) {\n      if (node.label) {\n        if (state.innerLabels.indexOf(node.label.name) >= 0) {\n          return;\n        }\n\n        loopText = loopText + \"|\" + node.label.name;\n      } else {\n        if (state.ignoreLabeless) return;\n\n        if (state.inSwitchCase) return;\n\n        if (t.isBreakStatement(node) && t.isSwitchCase(parent)) return;\n      }\n\n      state.hasBreakContinue = true;\n      state.map[loopText] = node;\n      replace = t.stringLiteral(loopText);\n    }\n\n    if (path.isReturnStatement()) {\n      state.hasReturn = true;\n      replace = t.objectExpression([t.objectProperty(t.identifier(\"v\"), node.argument || scope.buildUndefinedNode())]);\n    }\n\n    if (replace) {\n      replace = t.returnStatement(replace);\n      replace[this.LOOP_IGNORE] = true;\n      path.skip();\n      path.replaceWith(t.inherits(replace, node));\n    }\n  }\n};\n\nvar BlockScoping = function () {\n  function BlockScoping(loopPath, blockPath, parent, scope, file) {\n    (0, _classCallCheck3.default)(this, BlockScoping);\n\n    this.parent = parent;\n    this.scope = scope;\n    this.file = file;\n\n    this.blockPath = blockPath;\n    this.block = blockPath.node;\n\n    this.outsideLetReferences = (0, _create2.default)(null);\n    this.hasLetReferences = false;\n    this.letReferences = (0, _create2.default)(null);\n    this.body = [];\n\n    if (loopPath) {\n      this.loopParent = loopPath.parent;\n      this.loopLabel = t.isLabeledStatement(this.loopParent) && this.loopParent.label;\n      this.loopPath = loopPath;\n      this.loop = loopPath.node;\n    }\n  }\n\n  BlockScoping.prototype.run = function run() {\n    var block = this.block;\n    if (block._letDone) return;\n    block._letDone = true;\n\n    var needsClosure = this.getLetReferences();\n\n    if (t.isFunction(this.parent) || t.isProgram(this.block)) {\n      this.updateScopeInfo();\n      return;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    if (needsClosure) {\n      this.wrapClosure();\n    } else {\n      this.remap();\n    }\n\n    this.updateScopeInfo(needsClosure);\n\n    if (this.loopLabel && !t.isLabeledStatement(this.loopParent)) {\n      return t.labeledStatement(this.loopLabel, this.loop);\n    }\n  };\n\n  BlockScoping.prototype.updateScopeInfo = function updateScopeInfo(wrappedInClosure) {\n    var scope = this.scope;\n    var parentScope = scope.getFunctionParent();\n    var letRefs = this.letReferences;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n      var binding = scope.getBinding(ref.name);\n      if (!binding) continue;\n      if (binding.kind === \"let\" || binding.kind === \"const\") {\n        binding.kind = \"var\";\n\n        if (wrappedInClosure) {\n          scope.removeBinding(ref.name);\n        } else {\n          scope.moveBindingTo(ref.name, parentScope);\n        }\n      }\n    }\n  };\n\n  BlockScoping.prototype.remap = function remap() {\n    var letRefs = this.letReferences;\n    var scope = this.scope;\n\n    for (var key in letRefs) {\n      var ref = letRefs[key];\n\n      if (scope.parentHasBinding(key) || scope.hasGlobal(key)) {\n        if (scope.hasOwnBinding(key)) scope.rename(ref.name);\n\n        if (this.blockPath.scope.hasOwnBinding(key)) this.blockPath.scope.rename(ref.name);\n      }\n    }\n  };\n\n  BlockScoping.prototype.wrapClosure = function wrapClosure() {\n    if (this.file.opts.throwIfClosureRequired) {\n      throw this.blockPath.buildCodeFrameError(\"Compiling let/const in this block would add a closure \" + \"(throwIfClosureRequired).\");\n    }\n    var block = this.block;\n\n    var outsideRefs = this.outsideLetReferences;\n\n    if (this.loop) {\n      for (var name in outsideRefs) {\n        var id = outsideRefs[name];\n\n        if (this.scope.hasGlobal(id.name) || this.scope.parentHasBinding(id.name)) {\n          delete outsideRefs[id.name];\n          delete this.letReferences[id.name];\n\n          this.scope.rename(id.name);\n\n          this.letReferences[id.name] = id;\n          outsideRefs[id.name] = id;\n        }\n      }\n    }\n\n    this.has = this.checkLoop();\n\n    this.hoistVarDeclarations();\n\n    var params = (0, _values2.default)(outsideRefs);\n    var args = (0, _values2.default)(outsideRefs);\n\n    var isSwitch = this.blockPath.isSwitchStatement();\n\n    var fn = t.functionExpression(null, params, t.blockStatement(isSwitch ? [block] : block.body));\n    fn.shadow = true;\n\n    this.addContinuations(fn);\n\n    var ref = fn;\n\n    if (this.loop) {\n      ref = this.scope.generateUidIdentifier(\"loop\");\n      this.loopPath.insertBefore(t.variableDeclaration(\"var\", [t.variableDeclarator(ref, fn)]));\n    }\n\n    var call = t.callExpression(ref, args);\n    var ret = this.scope.generateUidIdentifier(\"ret\");\n\n    var hasYield = _babelTraverse2.default.hasType(fn.body, this.scope, \"YieldExpression\", t.FUNCTION_TYPES);\n    if (hasYield) {\n      fn.generator = true;\n      call = t.yieldExpression(call, true);\n    }\n\n    var hasAsync = _babelTraverse2.default.hasType(fn.body, this.scope, \"AwaitExpression\", t.FUNCTION_TYPES);\n    if (hasAsync) {\n      fn.async = true;\n      call = t.awaitExpression(call);\n    }\n\n    this.buildClosure(ret, call);\n\n    if (isSwitch) this.blockPath.replaceWithMultiple(this.body);else block.body = this.body;\n  };\n\n  BlockScoping.prototype.buildClosure = function buildClosure(ret, call) {\n    var has = this.has;\n    if (has.hasReturn || has.hasBreakContinue) {\n      this.buildHas(ret, call);\n    } else {\n      this.body.push(t.expressionStatement(call));\n    }\n  };\n\n  BlockScoping.prototype.addContinuations = function addContinuations(fn) {\n    var state = {\n      reassignments: {},\n      outsideReferences: this.outsideLetReferences\n    };\n\n    this.scope.traverse(fn, continuationVisitor, state);\n\n    for (var i = 0; i < fn.params.length; i++) {\n      var param = fn.params[i];\n      if (!state.reassignments[param.name]) continue;\n\n      var newParam = this.scope.generateUidIdentifier(param.name);\n      fn.params[i] = newParam;\n\n      this.scope.rename(param.name, newParam.name, fn);\n\n      fn.body.body.push(t.expressionStatement(t.assignmentExpression(\"=\", param, newParam)));\n    }\n  };\n\n  BlockScoping.prototype.getLetReferences = function getLetReferences() {\n    var _this = this;\n\n    var block = this.block;\n\n    var declarators = [];\n\n    if (this.loop) {\n      var init = this.loop.left || this.loop.init;\n      if (isBlockScoped(init)) {\n        declarators.push(init);\n        (0, _extend2.default)(this.outsideLetReferences, t.getBindingIdentifiers(init));\n      }\n    }\n\n    var addDeclarationsFromChild = function addDeclarationsFromChild(path, node) {\n      node = node || path.node;\n      if (t.isClassDeclaration(node) || t.isFunctionDeclaration(node) || isBlockScoped(node)) {\n        if (isBlockScoped(node)) {\n          convertBlockScopedToVar(path, node, block, _this.scope);\n        }\n        declarators = declarators.concat(node.declarations || node);\n      }\n      if (t.isLabeledStatement(node)) {\n        addDeclarationsFromChild(path.get(\"body\"), node.body);\n      }\n    };\n\n    if (block.body) {\n      for (var i = 0; i < block.body.length; i++) {\n        var declarPath = this.blockPath.get(\"body\")[i];\n        addDeclarationsFromChild(declarPath);\n      }\n    }\n\n    if (block.cases) {\n      for (var _i = 0; _i < block.cases.length; _i++) {\n        var consequents = block.cases[_i].consequent;\n\n        for (var j = 0; j < consequents.length; j++) {\n          var _declarPath = this.blockPath.get(\"cases\")[_i];\n          var declar = consequents[j];\n          addDeclarationsFromChild(_declarPath, declar);\n        }\n      }\n    }\n\n    for (var _i2 = 0; _i2 < declarators.length; _i2++) {\n      var _declar = declarators[_i2];\n\n      var keys = t.getBindingIdentifiers(_declar, false, true);\n      (0, _extend2.default)(this.letReferences, keys);\n      this.hasLetReferences = true;\n    }\n\n    if (!this.hasLetReferences) return;\n\n    var state = {\n      letReferences: this.letReferences,\n      closurify: false,\n      file: this.file,\n      loopDepth: 0\n    };\n\n    var loopOrFunctionParent = this.blockPath.find(function (path) {\n      return path.isLoop() || path.isFunction();\n    });\n    if (loopOrFunctionParent && loopOrFunctionParent.isLoop()) {\n      state.loopDepth++;\n    }\n\n    this.blockPath.traverse(letReferenceBlockVisitor, state);\n\n    return state.closurify;\n  };\n\n  BlockScoping.prototype.checkLoop = function checkLoop() {\n    var state = {\n      hasBreakContinue: false,\n      ignoreLabeless: false,\n      inSwitchCase: false,\n      innerLabels: [],\n      hasReturn: false,\n      isLoop: !!this.loop,\n      map: {},\n      LOOP_IGNORE: (0, _symbol2.default)()\n    };\n\n    this.blockPath.traverse(loopLabelVisitor, state);\n    this.blockPath.traverse(loopVisitor, state);\n\n    return state;\n  };\n\n  BlockScoping.prototype.hoistVarDeclarations = function hoistVarDeclarations() {\n    this.blockPath.traverse(hoistVarDeclarationsVisitor, this);\n  };\n\n  BlockScoping.prototype.pushDeclar = function pushDeclar(node) {\n    var declars = [];\n    var names = t.getBindingIdentifiers(node);\n    for (var name in names) {\n      declars.push(t.variableDeclarator(names[name]));\n    }\n\n    this.body.push(t.variableDeclaration(node.kind, declars));\n\n    var replace = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var declar = node.declarations[i];\n      if (!declar.init) continue;\n\n      var expr = t.assignmentExpression(\"=\", declar.id, declar.init);\n      replace.push(t.inherits(expr, declar));\n    }\n\n    return replace;\n  };\n\n  BlockScoping.prototype.buildHas = function buildHas(ret, call) {\n    var body = this.body;\n\n    body.push(t.variableDeclaration(\"var\", [t.variableDeclarator(ret, call)]));\n\n    var retCheck = void 0;\n    var has = this.has;\n    var cases = [];\n\n    if (has.hasReturn) {\n      retCheck = buildRetCheck({\n        RETURN: ret\n      });\n    }\n\n    if (has.hasBreakContinue) {\n      for (var key in has.map) {\n        cases.push(t.switchCase(t.stringLiteral(key), [has.map[key]]));\n      }\n\n      if (has.hasReturn) {\n        cases.push(t.switchCase(null, [retCheck]));\n      }\n\n      if (cases.length === 1) {\n        var single = cases[0];\n        body.push(t.ifStatement(t.binaryExpression(\"===\", ret, single.test), single.consequent[0]));\n      } else {\n        if (this.loop) {\n          for (var i = 0; i < cases.length; i++) {\n            var caseConsequent = cases[i].consequent[0];\n            if (t.isBreakStatement(caseConsequent) && !caseConsequent.label) {\n              caseConsequent.label = this.loopLabel = this.loopLabel || this.scope.generateUidIdentifier(\"loop\");\n            }\n          }\n        }\n\n        body.push(t.switchStatement(ret, cases));\n      }\n    } else {\n      if (has.hasReturn) {\n        body.push(retCheck);\n      }\n    }\n  };\n\n  return BlockScoping;\n}();\n\nmodule.exports = exports[\"default\"];"]}