{"version":3,"sources":["../../../node_modules/lodash/_baseIsNative.js"],"names":["isFunction","require","isMasked","isObject","toSource","reRegExpChar","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","baseIsNative","value","pattern","test","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,cAAR,CAAjB;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,WAAWF,QAAQ,YAAR,CAFf;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;;AAKA;;;;AAIA,IAAII,eAAe,qBAAnB;;AAEA;AACA,IAAIC,eAAe,6BAAnB;;AAEA;AACA,IAAIC,YAAYC,SAASC,SAAzB;AAAA,IACIC,cAAcC,OAAOF,SADzB;;AAGA;AACA,IAAIG,eAAeL,UAAUM,QAA7B;;AAEA;AACA,IAAIC,iBAAiBJ,YAAYI,cAAjC;;AAEA;AACA,IAAIC,aAAaC,OAAO,MACtBJ,aAAaK,IAAb,CAAkBH,cAAlB,EAAkCI,OAAlC,CAA0Cb,YAA1C,EAAwD,MAAxD,EACCa,OADD,CACS,wDADT,EACmE,OADnE,CADsB,GAEwD,GAF/D,CAAjB;;AAKA;;;;;;;;AAQA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI,CAACjB,SAASiB,KAAT,CAAD,IAAoBlB,SAASkB,KAAT,CAAxB,EAAyC;AACvC,WAAO,KAAP;AACD;AACD,MAAIC,UAAUrB,WAAWoB,KAAX,IAAoBL,UAApB,GAAiCT,YAA/C;AACA,SAAOe,QAAQC,IAAR,CAAalB,SAASgB,KAAT,CAAb,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBL,YAAjB","file":"_baseIsNative.js","sourcesContent":["var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"]}