{"version":3,"sources":["../../../node_modules/lodash/matches.js"],"names":["baseClone","require","baseMatches","CLONE_DEEP_FLAG","matches","source","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,IACIC,cAAcD,QAAQ,gBAAR,CADlB;;AAGA;AACA,IAAIE,kBAAkB,CAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOH,YAAYF,UAAUK,MAAV,EAAkBF,eAAlB,CAAZ,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBH,OAAjB","file":"matches.js","sourcesContent":["var baseClone = require('./_baseClone'),\n    baseMatches = require('./_baseMatches');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nmodule.exports = matches;\n"]}