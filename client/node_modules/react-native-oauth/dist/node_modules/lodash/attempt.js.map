{"version":3,"sources":["../../../node_modules/lodash/attempt.js"],"names":["apply","require","baseRest","isError","attempt","func","args","undefined","e","Error","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,UAAUF,QAAQ,WAAR,CAFd;;AAIA;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAIG,UAAUF,SAAS,UAASG,IAAT,EAAeC,IAAf,EAAqB;AAC1C,MAAI;AACF,WAAON,MAAMK,IAAN,EAAYE,SAAZ,EAAuBD,IAAvB,CAAP;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,WAAOL,QAAQK,CAAR,IAAaA,CAAb,GAAiB,IAAIC,KAAJ,CAAUD,CAAV,CAAxB;AACD;AACF,CANa,CAAd;;AAQAE,OAAOC,OAAP,GAAiBP,OAAjB","file":"attempt.js","sourcesContent":["var apply = require('./_apply'),\n    baseRest = require('./_baseRest'),\n    isError = require('./isError');\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nmodule.exports = attempt;\n"]}