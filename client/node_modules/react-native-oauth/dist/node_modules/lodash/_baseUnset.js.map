{"version":3,"sources":["../../../node_modules/lodash/_baseUnset.js"],"names":["castPath","require","last","parent","toKey","baseUnset","object","path","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,OAAOD,QAAQ,QAAR,CADX;AAAA,IAEIE,SAASF,QAAQ,WAAR,CAFb;AAAA,IAGIG,QAAQH,QAAQ,UAAR,CAHZ;;AAKA;;;;;;;;AAQA,SAASI,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAC/BA,SAAOP,SAASO,IAAT,EAAeD,MAAf,CAAP;AACAA,WAASH,OAAOG,MAAP,EAAeC,IAAf,CAAT;AACA,SAAOD,UAAU,IAAV,IAAkB,OAAOA,OAAOF,MAAMF,KAAKK,IAAL,CAAN,CAAP,CAAhC;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,SAAjB","file":"_baseUnset.js","sourcesContent":["var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n"]}