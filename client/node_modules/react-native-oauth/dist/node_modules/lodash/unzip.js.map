{"version":3,"sources":["../../../node_modules/lodash/unzip.js"],"names":["arrayFilter","require","arrayMap","baseProperty","baseTimes","isArrayLikeObject","nativeMax","Math","max","unzip","array","length","group","index","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,YAAYH,QAAQ,cAAR,CAHhB;AAAA,IAIII,oBAAoBJ,QAAQ,qBAAR,CAJxB;;AAMA;AACA,IAAIK,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,MAAI,EAAEA,SAASA,MAAMC,MAAjB,CAAJ,EAA8B;AAC5B,WAAO,EAAP;AACD;AACD,MAAIA,SAAS,CAAb;AACAD,UAAQV,YAAYU,KAAZ,EAAmB,UAASE,KAAT,EAAgB;AACzC,QAAIP,kBAAkBO,KAAlB,CAAJ,EAA8B;AAC5BD,eAASL,UAAUM,MAAMD,MAAhB,EAAwBA,MAAxB,CAAT;AACA,aAAO,IAAP;AACD;AACF,GALO,CAAR;AAMA,SAAOP,UAAUO,MAAV,EAAkB,UAASE,KAAT,EAAgB;AACvC,WAAOX,SAASQ,KAAT,EAAgBP,aAAaU,KAAb,CAAhB,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDC,OAAOC,OAAP,GAAiBN,KAAjB","file":"unzip.js","sourcesContent":["var arrayFilter = require('./_arrayFilter'),\n    arrayMap = require('./_arrayMap'),\n    baseProperty = require('./_baseProperty'),\n    baseTimes = require('./_baseTimes'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nmodule.exports = unzip;\n"]}