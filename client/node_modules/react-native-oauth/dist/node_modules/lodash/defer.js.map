{"version":3,"sources":["../../../node_modules/lodash/defer.js"],"names":["baseDelay","require","baseRest","defer","func","args","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;;AAGA;;;;;;;;;;;;;;;;;;AAkBA,IAAIE,QAAQD,SAAS,UAASE,IAAT,EAAeC,IAAf,EAAqB;AACxC,SAAOL,UAAUI,IAAV,EAAgB,CAAhB,EAAmBC,IAAnB,CAAP;AACD,CAFW,CAAZ;;AAIAC,OAAOC,OAAP,GAAiBJ,KAAjB","file":"defer.js","sourcesContent":["var baseDelay = require('./_baseDelay'),\n    baseRest = require('./_baseRest');\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */\nvar defer = baseRest(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nmodule.exports = defer;\n"]}