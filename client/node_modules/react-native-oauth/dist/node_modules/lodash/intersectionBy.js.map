{"version":3,"sources":["../../../node_modules/lodash/intersectionBy.js"],"names":["arrayMap","require","baseIntersection","baseIteratee","baseRest","castArrayLikeObject","last","intersectionBy","arrays","iteratee","mapped","undefined","pop","length","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,mBAAmBD,QAAQ,qBAAR,CADvB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;AAAA,IAIII,sBAAsBJ,QAAQ,wBAAR,CAJ1B;AAAA,IAKIK,OAAOL,QAAQ,QAAR,CALX;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIM,iBAAiBH,SAAS,UAASI,MAAT,EAAiB;AAC7C,MAAIC,WAAWH,KAAKE,MAAL,CAAf;AAAA,MACIE,SAASV,SAASQ,MAAT,EAAiBH,mBAAjB,CADb;;AAGA,MAAII,aAAaH,KAAKI,MAAL,CAAjB,EAA+B;AAC7BD,eAAWE,SAAX;AACD,GAFD,MAEO;AACLD,WAAOE,GAAP;AACD;AACD,SAAQF,OAAOG,MAAP,IAAiBH,OAAO,CAAP,MAAcF,OAAO,CAAP,CAAhC,GACHN,iBAAiBQ,MAAjB,EAAyBP,aAAaM,QAAb,EAAuB,CAAvB,CAAzB,CADG,GAEH,EAFJ;AAGD,CAZoB,CAArB;;AAcAK,OAAOC,OAAP,GAAiBR,cAAjB","file":"intersectionBy.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */\nvar intersectionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (iteratee === last(mapped)) {\n    iteratee = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = intersectionBy;\n"]}