{"version":3,"sources":["../../../node_modules/lodash/intersectionWith.js"],"names":["arrayMap","require","baseIntersection","baseRest","castArrayLikeObject","last","intersectionWith","arrays","comparator","mapped","undefined","pop","length","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,mBAAmBD,QAAQ,qBAAR,CADvB;AAAA,IAEIE,WAAWF,QAAQ,aAAR,CAFf;AAAA,IAGIG,sBAAsBH,QAAQ,wBAAR,CAH1B;AAAA,IAIII,OAAOJ,QAAQ,QAAR,CAJX;;AAMA;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAIK,mBAAmBH,SAAS,UAASI,MAAT,EAAiB;AAC/C,QAAIC,aAAaH,KAAKE,MAAL,CAAjB;AAAA,QACIE,SAAST,SAASO,MAAT,EAAiBH,mBAAjB,CADb;;AAGAI,iBAAa,OAAOA,UAAP,IAAqB,UAArB,GAAkCA,UAAlC,GAA+CE,SAA5D;AACA,QAAIF,UAAJ,EAAgB;AACdC,eAAOE,GAAP;AACD;AACD,WAAQF,OAAOG,MAAP,IAAiBH,OAAO,CAAP,MAAcF,OAAO,CAAP,CAAhC,GACHL,iBAAiBO,MAAjB,EAAyBC,SAAzB,EAAoCF,UAApC,CADG,GAEH,EAFJ;AAGD,CAXsB,CAAvB;;AAaAK,OAAOC,OAAP,GAAiBR,gBAAjB","file":"intersectionWith.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nmodule.exports = intersectionWith;\n"]}