{"version":3,"sources":["../../../node_modules/lodash/cond.js"],"names":["apply","require","arrayMap","baseIteratee","baseRest","FUNC_ERROR_TEXT","cond","pairs","length","toIteratee","pair","TypeError","args","index","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;;AAKA;AACA,IAAII,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAIC,SAASD,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMC,MAAvC;AAAA,MACIC,aAAaN,YADjB;;AAGAI,UAAQ,CAACC,MAAD,GAAU,EAAV,GAAeN,SAASK,KAAT,EAAgB,UAASG,IAAT,EAAe;AACpD,QAAI,OAAOA,KAAK,CAAL,CAAP,IAAkB,UAAtB,EAAkC;AAChC,YAAM,IAAIC,SAAJ,CAAcN,eAAd,CAAN;AACD;AACD,WAAO,CAACI,WAAWC,KAAK,CAAL,CAAX,CAAD,EAAsBA,KAAK,CAAL,CAAtB,CAAP;AACD,GALsB,CAAvB;;AAOA,SAAON,SAAS,UAASQ,IAAT,EAAe;AAC7B,QAAIC,QAAQ,CAAC,CAAb;AACA,WAAO,EAAEA,KAAF,GAAUL,MAAjB,EAAyB;AACvB,UAAIE,OAAOH,MAAMM,KAAN,CAAX;AACA,UAAIb,MAAMU,KAAK,CAAL,CAAN,EAAe,IAAf,EAAqBE,IAArB,CAAJ,EAAgC;AAC9B,eAAOZ,MAAMU,KAAK,CAAL,CAAN,EAAe,IAAf,EAAqBE,IAArB,CAAP;AACD;AACF;AACF,GARM,CAAP;AASD;;AAEDE,OAAOC,OAAP,GAAiBT,IAAjB","file":"cond.js","sourcesContent":["var apply = require('./_apply'),\n    arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that iterates over `pairs` and invokes the corresponding\n * function of the first predicate to return truthy. The predicate-function\n * pairs are invoked with the `this` binding and arguments of the created\n * function.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Array} pairs The predicate-function pairs.\n * @returns {Function} Returns the new composite function.\n * @example\n *\n * var func = _.cond([\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n *   [_.stubTrue,                      _.constant('no match')]\n * ]);\n *\n * func({ 'a': 1, 'b': 2 });\n * // => 'matches A'\n *\n * func({ 'a': 0, 'b': 1 });\n * // => 'matches B'\n *\n * func({ 'a': '1', 'b': '2' });\n * // => 'no match'\n */\nfunction cond(pairs) {\n  var length = pairs == null ? 0 : pairs.length,\n      toIteratee = baseIteratee;\n\n  pairs = !length ? [] : arrayMap(pairs, function(pair) {\n    if (typeof pair[1] != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return [toIteratee(pair[0]), pair[1]];\n  });\n\n  return baseRest(function(args) {\n    var index = -1;\n    while (++index < length) {\n      var pair = pairs[index];\n      if (apply(pair[0], this, args)) {\n        return apply(pair[1], this, args);\n      }\n    }\n  });\n}\n\nmodule.exports = cond;\n"]}