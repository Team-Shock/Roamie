{"version":3,"sources":["../../../node_modules/lodash/zipObject.js"],"names":["assignValue","require","baseZipObject","zipObject","props","values","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,gBAAgBD,QAAQ,kBAAR,CADpB;;AAGA;;;;;;;;;;;;;;;;AAgBA,SAASE,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;AAChC,SAAOH,cAAcE,SAAS,EAAvB,EAA2BC,UAAU,EAArC,EAAyCL,WAAzC,CAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBJ,SAAjB","file":"zipObject.js","sourcesContent":["var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n"]}