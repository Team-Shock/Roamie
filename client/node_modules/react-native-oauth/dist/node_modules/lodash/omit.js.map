{"version":3,"sources":["../../../node_modules/lodash/omit.js"],"names":["arrayMap","require","baseClone","baseUnset","castPath","copyObject","customOmitClone","flatRest","getAllKeysIn","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","object","paths","result","isDeep","path","length","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,IAEIE,YAAYF,QAAQ,cAAR,CAFhB;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;AAAA,IAIII,aAAaJ,QAAQ,eAAR,CAJjB;AAAA,IAKIK,kBAAkBL,QAAQ,oBAAR,CALtB;AAAA,IAMIM,WAAWN,QAAQ,aAAR,CANf;AAAA,IAOIO,eAAeP,QAAQ,iBAAR,CAPnB;;AASA;AACA,IAAIQ,kBAAkB,CAAtB;AAAA,IACIC,kBAAkB,CADtB;AAAA,IAEIC,qBAAqB,CAFzB;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIC,OAAOL,SAAS,UAASM,MAAT,EAAiBC,KAAjB,EAAwB;AAC1C,MAAIC,SAAS,EAAb;AACA,MAAIF,UAAU,IAAd,EAAoB;AAClB,WAAOE,MAAP;AACD;AACD,MAAIC,SAAS,KAAb;AACAF,UAAQd,SAASc,KAAT,EAAgB,UAASG,IAAT,EAAe;AACrCA,WAAOb,SAASa,IAAT,EAAeJ,MAAf,CAAP;AACAG,eAAWA,SAASC,KAAKC,MAAL,GAAc,CAAlC;AACA,WAAOD,IAAP;AACD,GAJO,CAAR;AAKAZ,aAAWQ,MAAX,EAAmBL,aAAaK,MAAb,CAAnB,EAAyCE,MAAzC;AACA,MAAIC,MAAJ,EAAY;AACVD,aAASb,UAAUa,MAAV,EAAkBN,kBAAkBC,eAAlB,GAAoCC,kBAAtD,EAA0EL,eAA1E,CAAT;AACD;AACD,MAAIY,SAASJ,MAAMI,MAAnB;AACA,SAAOA,QAAP,EAAiB;AACff,cAAUY,MAAV,EAAkBD,MAAMI,MAAN,CAAlB;AACD;AACD,SAAOH,MAAP;AACD,CApBU,CAAX;;AAsBAI,OAAOC,OAAP,GAAiBR,IAAjB","file":"omit.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n"]}