{"version":3,"sources":["../../../node_modules/lodash/forInRight.js"],"names":["baseForRight","require","castFunction","keysIn","forInRight","object","iteratee","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,IACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,IAEIE,SAASF,QAAQ,UAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAASG,UAAT,CAAoBC,MAApB,EAA4BC,QAA5B,EAAsC;AACpC,WAAOD,UAAU,IAAV,GACHA,MADG,GAEHL,aAAaK,MAAb,EAAqBH,aAAaI,QAAb,CAArB,EAA6CH,MAA7C,CAFJ;AAGD;;AAEDI,OAAOC,OAAP,GAAiBJ,UAAjB","file":"forInRight.js","sourcesContent":["var baseForRight = require('./_baseForRight'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */\nfunction forInRight(object, iteratee) {\n  return object == null\n    ? object\n    : baseForRight(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forInRight;\n"]}