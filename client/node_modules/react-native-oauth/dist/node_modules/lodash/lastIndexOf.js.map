{"version":3,"sources":["../../../node_modules/lodash/lastIndexOf.js"],"names":["baseFindIndex","require","baseIsNaN","strictLastIndexOf","toInteger","nativeMax","Math","max","nativeMin","min","lastIndexOf","array","value","fromIndex","length","index","undefined","module","exports"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,kBAAR,CAApB;AAAA,IACIC,YAAYD,QAAQ,cAAR,CADhB;AAAA,IAEIE,oBAAoBF,QAAQ,sBAAR,CAFxB;AAAA,IAGIG,YAAYH,QAAQ,aAAR,CAHhB;;AAKA;AACA,IAAII,YAAYC,KAAKC,GAArB;AAAA,IACIC,YAAYF,KAAKG,GADrB;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,SAAnC,EAA8C;AAC5C,MAAIC,SAASH,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMG,MAAvC;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,CAAC,CAAR;AACD;AACD,MAAIC,QAAQD,MAAZ;AACA,MAAID,cAAcG,SAAlB,EAA6B;AAC3BD,YAAQX,UAAUS,SAAV,CAAR;AACAE,YAAQA,QAAQ,CAAR,GAAYV,UAAUS,SAASC,KAAnB,EAA0B,CAA1B,CAAZ,GAA2CP,UAAUO,KAAV,EAAiBD,SAAS,CAA1B,CAAnD;AACD;AACD,SAAOF,UAAUA,KAAV,GACHT,kBAAkBQ,KAAlB,EAAyBC,KAAzB,EAAgCG,KAAhC,CADG,GAEHf,cAAcW,KAAd,EAAqBT,SAArB,EAAgCa,KAAhC,EAAuC,IAAvC,CAFJ;AAGD;;AAEDE,OAAOC,OAAP,GAAiBR,WAAjB","file":"lastIndexOf.js","sourcesContent":["var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictLastIndexOf = require('./_strictLastIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n  }\n  return value === value\n    ? strictLastIndexOf(array, value, index)\n    : baseFindIndex(array, baseIsNaN, index, true);\n}\n\nmodule.exports = lastIndexOf;\n"]}