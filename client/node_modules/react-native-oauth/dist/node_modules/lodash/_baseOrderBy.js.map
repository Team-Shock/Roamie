{"version":3,"sources":["../../../node_modules/lodash/_baseOrderBy.js"],"names":["arrayMap","require","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","baseOrderBy","collection","iteratees","orders","index","length","result","value","key","criteria","iteratee","object","other","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,IAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,IAGIG,aAAaH,QAAQ,eAAR,CAHjB;AAAA,IAIII,YAAYJ,QAAQ,cAAR,CAJhB;AAAA,IAKIK,kBAAkBL,QAAQ,oBAAR,CALtB;AAAA,IAMIM,WAAWN,QAAQ,YAAR,CANf;;AAQA;;;;;;;;;AASA,SAASO,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,MAA5C,EAAoD;AAClD,MAAIC,QAAQ,CAAC,CAAb;AACAF,cAAYV,SAASU,UAAUG,MAAV,GAAmBH,SAAnB,GAA+B,CAACH,QAAD,CAAxC,EAAoDF,UAAUH,YAAV,CAApD,CAAZ;;AAEA,MAAIY,SAASX,QAAQM,UAAR,EAAoB,UAASM,KAAT,EAAgBC,GAAhB,EAAqBP,UAArB,EAAiC;AAChE,QAAIQ,WAAWjB,SAASU,SAAT,EAAoB,UAASQ,QAAT,EAAmB;AACpD,aAAOA,SAASH,KAAT,CAAP;AACD,KAFc,CAAf;AAGA,WAAO,EAAE,YAAYE,QAAd,EAAwB,SAAS,EAAEL,KAAnC,EAA0C,SAASG,KAAnD,EAAP;AACD,GALY,CAAb;;AAOA,SAAOX,WAAWU,MAAX,EAAmB,UAASK,MAAT,EAAiBC,KAAjB,EAAwB;AAChD,WAAOd,gBAAgBa,MAAhB,EAAwBC,KAAxB,EAA+BT,MAA/B,CAAP;AACD,GAFM,CAAP;AAGD;;AAEDU,OAAOC,OAAP,GAAiBd,WAAjB","file":"_baseOrderBy.js","sourcesContent":["var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n"]}