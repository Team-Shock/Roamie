{"version":3,"sources":["../../../node_modules/lodash/differenceBy.js"],"names":["baseDifference","require","baseFlatten","baseIteratee","baseRest","isArrayLikeObject","last","differenceBy","array","values","iteratee","undefined","module","exports"],"mappings":";;AAAA,IAAIA,iBAAiBC,QAAQ,mBAAR,CAArB;AAAA,IACIC,cAAcD,QAAQ,gBAAR,CADlB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;AAAA,IAIII,oBAAoBJ,QAAQ,qBAAR,CAJxB;AAAA,IAKIK,OAAOL,QAAQ,QAAR,CALX;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIM,eAAeH,SAAS,UAASI,KAAT,EAAgBC,MAAhB,EAAwB;AAClD,MAAIC,WAAWJ,KAAKG,MAAL,CAAf;AACA,MAAIJ,kBAAkBK,QAAlB,CAAJ,EAAiC;AAC/BA,eAAWC,SAAX;AACD;AACD,SAAON,kBAAkBG,KAAlB,IACHR,eAAeQ,KAAf,EAAsBN,YAAYO,MAAZ,EAAoB,CAApB,EAAuBJ,iBAAvB,EAA0C,IAA1C,CAAtB,EAAuEF,aAAaO,QAAb,EAAuB,CAAvB,CAAvE,CADG,GAEH,EAFJ;AAGD,CARkB,CAAnB;;AAUAE,OAAOC,OAAP,GAAiBN,YAAjB","file":"differenceBy.js","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nmodule.exports = differenceBy;\n"]}