{"version":3,"sources":["../../../node_modules/lodash/_createCtor.js"],"names":["baseCreate","require","isObject","createCtor","Ctor","args","arguments","length","thisBinding","prototype","result","apply","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,WAAWD,QAAQ,YAAR,CADf;;AAGA;;;;;;;;AAQA,SAASE,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAO,YAAW;AAChB;AACA;AACA;AACA,QAAIC,OAAOC,SAAX;AACA,YAAQD,KAAKE,MAAb;AACE,WAAK,CAAL;AAAQ,eAAO,IAAIH,IAAJ,EAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAIA,IAAJ,CAASC,KAAK,CAAL,CAAT,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,EAAsDA,KAAK,CAAL,CAAtD,CAAP;AACR,WAAK,CAAL;AAAQ,eAAO,IAAID,IAAJ,CAASC,KAAK,CAAL,CAAT,EAAkBA,KAAK,CAAL,CAAlB,EAA2BA,KAAK,CAAL,CAA3B,EAAoCA,KAAK,CAAL,CAApC,EAA6CA,KAAK,CAAL,CAA7C,EAAsDA,KAAK,CAAL,CAAtD,EAA+DA,KAAK,CAAL,CAA/D,CAAP;AARV;AAUA,QAAIG,cAAcR,WAAWI,KAAKK,SAAhB,CAAlB;AAAA,QACIC,SAASN,KAAKO,KAAL,CAAWH,WAAX,EAAwBH,IAAxB,CADb;;AAGA;AACA;AACA,WAAOH,SAASQ,MAAT,IAAmBA,MAAnB,GAA4BF,WAAnC;AACD,GArBD;AAsBD;;AAEDI,OAAOC,OAAP,GAAiBV,UAAjB","file":"_createCtor.js","sourcesContent":["var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n"]}