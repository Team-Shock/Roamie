{"version":3,"sources":["../../../node_modules/lodash/mapKeys.js"],"names":["baseAssignValue","require","baseForOwn","baseIteratee","mapKeys","object","iteratee","result","value","key","module","exports"],"mappings":";;AAAA,IAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,IACIC,aAAaD,QAAQ,eAAR,CADjB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,QAAzB,EAAmC;AACjC,MAAIC,SAAS,EAAb;AACAD,aAAWH,aAAaG,QAAb,EAAuB,CAAvB,CAAX;;AAEAJ,aAAWG,MAAX,EAAmB,UAASG,KAAT,EAAgBC,GAAhB,EAAqBJ,MAArB,EAA6B;AAC9CL,oBAAgBO,MAAhB,EAAwBD,SAASE,KAAT,EAAgBC,GAAhB,EAAqBJ,MAArB,CAAxB,EAAsDG,KAAtD;AACD,GAFD;AAGA,SAAOD,MAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBP,OAAjB","file":"mapKeys.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n"]}