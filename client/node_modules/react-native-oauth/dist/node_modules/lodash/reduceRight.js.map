{"version":3,"sources":["../../../node_modules/lodash/reduceRight.js"],"names":["arrayReduceRight","require","baseEachRight","baseIteratee","baseReduce","isArray","reduceRight","collection","iteratee","accumulator","func","initAccum","arguments","length","module","exports"],"mappings":";;AAAA,IAAIA,mBAAmBC,QAAQ,qBAAR,CAAvB;AAAA,IACIC,gBAAgBD,QAAQ,kBAAR,CADpB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,aAAaH,QAAQ,eAAR,CAHjB;AAAA,IAIII,UAAUJ,QAAQ,WAAR,CAJd;;AAMA;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASK,WAAT,CAAqBC,UAArB,EAAiCC,QAAjC,EAA2CC,WAA3C,EAAwD;AACtD,QAAIC,OAAOL,QAAQE,UAAR,IAAsBP,gBAAtB,GAAyCI,UAApD;AAAA,QACIO,YAAYC,UAAUC,MAAV,GAAmB,CADnC;;AAGA,WAAOH,KAAKH,UAAL,EAAiBJ,aAAaK,QAAb,EAAuB,CAAvB,CAAjB,EAA4CC,WAA5C,EAAyDE,SAAzD,EAAoET,aAApE,CAAP;AACD;;AAEDY,OAAOC,OAAP,GAAiBT,WAAjB","file":"reduceRight.js","sourcesContent":["var arrayReduceRight = require('./_arrayReduceRight'),\n    baseEachRight = require('./_baseEachRight'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.reduce` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduce\n * @example\n *\n * var array = [[0, 1], [2, 3], [4, 5]];\n *\n * _.reduceRight(array, function(flattened, other) {\n *   return flattened.concat(other);\n * }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nfunction reduceRight(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduceRight : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n}\n\nmodule.exports = reduceRight;\n"]}