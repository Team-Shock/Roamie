{"version":3,"sources":["../../../node_modules/lodash/_baseMerge.js"],"names":["Stack","require","assignMergeValue","baseFor","baseMergeDeep","isObject","keysIn","safeGet","baseMerge","object","source","srcIndex","customizer","stack","srcValue","key","newValue","undefined","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,IACIC,mBAAmBD,QAAQ,qBAAR,CADvB;AAAA,IAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,IAGIG,gBAAgBH,QAAQ,kBAAR,CAHpB;AAAA,IAIII,WAAWJ,QAAQ,YAAR,CAJf;AAAA,IAKIK,SAASL,QAAQ,UAAR,CALb;AAAA,IAMIM,UAAUN,QAAQ,YAAR,CANd;;AAQA;;;;;;;;;;;AAWA,SAASO,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,EAAyDC,KAAzD,EAAgE;AAC9D,MAAIJ,WAAWC,MAAf,EAAuB;AACrB;AACD;AACDP,UAAQO,MAAR,EAAgB,UAASI,QAAT,EAAmBC,GAAnB,EAAwB;AACtC,QAAIV,SAASS,QAAT,CAAJ,EAAwB;AACtBD,gBAAUA,QAAQ,IAAIb,KAAJ,EAAlB;AACAI,oBAAcK,MAAd,EAAsBC,MAAtB,EAA8BK,GAA9B,EAAmCJ,QAAnC,EAA6CH,SAA7C,EAAwDI,UAAxD,EAAoEC,KAApE;AACD,KAHD,MAIK;AACH,UAAIG,WAAWJ,aACXA,WAAWL,QAAQE,MAAR,EAAgBM,GAAhB,CAAX,EAAiCD,QAAjC,EAA4CC,MAAM,EAAlD,EAAuDN,MAAvD,EAA+DC,MAA/D,EAAuEG,KAAvE,CADW,GAEXI,SAFJ;;AAIA,UAAID,aAAaC,SAAjB,EAA4B;AAC1BD,mBAAWF,QAAX;AACD;AACDZ,uBAAiBO,MAAjB,EAAyBM,GAAzB,EAA8BC,QAA9B;AACD;AACF,GAfD,EAeGV,MAfH;AAgBD;;AAEDY,OAAOC,OAAP,GAAiBX,SAAjB","file":"_baseMerge.js","sourcesContent":["var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n"]}