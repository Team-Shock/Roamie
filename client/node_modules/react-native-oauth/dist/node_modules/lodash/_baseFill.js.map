{"version":3,"sources":["../../../node_modules/lodash/_baseFill.js"],"names":["toInteger","require","toLength","baseFill","array","value","start","end","length","undefined","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,aAAR,CAAhB;AAAA,IACIC,WAAWD,QAAQ,YAAR,CADf;;AAGA;;;;;;;;;;AAUA,SAASE,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4C;AAC1C,MAAIC,SAASJ,MAAMI,MAAnB;;AAEAF,UAAQN,UAAUM,KAAV,CAAR;AACA,MAAIA,QAAQ,CAAZ,EAAe;AACbA,YAAQ,CAACA,KAAD,GAASE,MAAT,GAAkB,CAAlB,GAAuBA,SAASF,KAAxC;AACD;AACDC,QAAOA,QAAQE,SAAR,IAAqBF,MAAMC,MAA5B,GAAsCA,MAAtC,GAA+CR,UAAUO,GAAV,CAArD;AACA,MAAIA,MAAM,CAAV,EAAa;AACXA,WAAOC,MAAP;AACD;AACDD,QAAMD,QAAQC,GAAR,GAAc,CAAd,GAAkBL,SAASK,GAAT,CAAxB;AACA,SAAOD,QAAQC,GAAf,EAAoB;AAClBH,UAAME,OAAN,IAAiBD,KAAjB;AACD;AACD,SAAOD,KAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBR,QAAjB","file":"_baseFill.js","sourcesContent":["var toInteger = require('./toInteger'),\n    toLength = require('./toLength');\n\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = toInteger(start);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : toInteger(end);\n  if (end < 0) {\n    end += length;\n  }\n  end = start > end ? 0 : toLength(end);\n  while (start < end) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nmodule.exports = baseFill;\n"]}