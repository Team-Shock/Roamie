{"version":3,"sources":["../../../node_modules/lodash/toFinite.js"],"names":["toNumber","require","INFINITY","MAX_INTEGER","toFinite","value","sign","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAEA;AACA,IAAIC,WAAW,IAAI,CAAnB;AAAA,IACIC,cAAc,uBADlB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MAAI,CAACA,KAAL,EAAY;AACV,WAAOA,UAAU,CAAV,GAAcA,KAAd,GAAsB,CAA7B;AACD;AACDA,UAAQL,SAASK,KAAT,CAAR;AACA,MAAIA,UAAUH,QAAV,IAAsBG,UAAU,CAACH,QAArC,EAA+C;AAC7C,QAAII,OAAQD,QAAQ,CAAR,GAAY,CAAC,CAAb,GAAiB,CAA7B;AACA,WAAOC,OAAOH,WAAd;AACD;AACD,SAAOE,UAAUA,KAAV,GAAkBA,KAAlB,GAA0B,CAAjC;AACD;;AAEDE,OAAOC,OAAP,GAAiBJ,QAAjB","file":"toFinite.js","sourcesContent":["var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n"]}