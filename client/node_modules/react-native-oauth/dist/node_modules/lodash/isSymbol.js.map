{"version":3,"sources":["../../../node_modules/lodash/isSymbol.js"],"names":["baseGetTag","require","isObjectLike","symbolTag","isSymbol","value","module","exports"],"mappings":";;;;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,eAAeD,QAAQ,gBAAR,CADnB;;AAGA;AACA,IAAIE,YAAY,iBAAhB;;AAEA;;;;;;;;;;;;;;;;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,WAAO,QAAOA,KAAP,yCAAOA,KAAP,MAAgB,QAAhB,IACJH,aAAaG,KAAb,KAAuBL,WAAWK,KAAX,KAAqBF,SAD/C;AAED;;AAEDG,OAAOC,OAAP,GAAiBH,QAAjB","file":"isSymbol.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n"]}