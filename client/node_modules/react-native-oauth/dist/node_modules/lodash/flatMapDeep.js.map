{"version":3,"sources":["../../../node_modules/lodash/flatMapDeep.js"],"names":["baseFlatten","require","map","INFINITY","flatMapDeep","collection","iteratee","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,MAAMD,QAAQ,OAAR,CADV;;AAGA;AACA,IAAIE,WAAW,IAAI,CAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,QAAjC,EAA2C;AACzC,SAAON,YAAYE,IAAIG,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuCH,QAAvC,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBJ,WAAjB","file":"flatMapDeep.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDeep([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMapDeep(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), INFINITY);\n}\n\nmodule.exports = flatMapDeep;\n"]}