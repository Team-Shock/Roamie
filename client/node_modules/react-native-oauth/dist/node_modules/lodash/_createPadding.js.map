{"version":3,"sources":["../../../node_modules/lodash/_createPadding.js"],"names":["baseRepeat","require","baseToString","castSlice","hasUnicode","stringSize","stringToArray","nativeCeil","Math","ceil","createPadding","length","chars","undefined","charsLength","result","join","slice","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,IAEIE,YAAYF,QAAQ,cAAR,CAFhB;AAAA,IAGIG,aAAaH,QAAQ,eAAR,CAHjB;AAAA,IAIII,aAAaJ,QAAQ,eAAR,CAJjB;AAAA,IAKIK,gBAAgBL,QAAQ,kBAAR,CALpB;;AAOA;AACA,IAAIM,aAAaC,KAAKC,IAAtB;;AAEA;;;;;;;;;AASA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;AACpCA,UAAQA,UAAUC,SAAV,GAAsB,GAAtB,GAA4BX,aAAaU,KAAb,CAApC;;AAEA,MAAIE,cAAcF,MAAMD,MAAxB;AACA,MAAIG,cAAc,CAAlB,EAAqB;AACnB,WAAOA,cAAcd,WAAWY,KAAX,EAAkBD,MAAlB,CAAd,GAA0CC,KAAjD;AACD;AACD,MAAIG,SAASf,WAAWY,KAAX,EAAkBL,WAAWI,SAASN,WAAWO,KAAX,CAApB,CAAlB,CAAb;AACA,SAAOR,WAAWQ,KAAX,IACHT,UAAUG,cAAcS,MAAd,CAAV,EAAiC,CAAjC,EAAoCJ,MAApC,EAA4CK,IAA5C,CAAiD,EAAjD,CADG,GAEHD,OAAOE,KAAP,CAAa,CAAb,EAAgBN,MAAhB,CAFJ;AAGD;;AAEDO,OAAOC,OAAP,GAAiBT,aAAjB","file":"_createPadding.js","sourcesContent":["var baseRepeat = require('./_baseRepeat'),\n    baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nmodule.exports = createPadding;\n"]}