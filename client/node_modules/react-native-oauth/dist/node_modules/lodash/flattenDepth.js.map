{"version":3,"sources":["../../../node_modules/lodash/flattenDepth.js"],"names":["baseFlatten","require","toInteger","flattenDepth","array","depth","length","undefined","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,YAAYD,QAAQ,aAAR,CADhB;;AAGA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASE,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAClC,MAAIC,SAASF,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAME,MAAvC;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;AACDD,UAAQA,UAAUE,SAAV,GAAsB,CAAtB,GAA0BL,UAAUG,KAAV,CAAlC;AACA,SAAOL,YAAYI,KAAZ,EAAmBC,KAAnB,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBN,YAAjB","file":"flattenDepth.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n"]}