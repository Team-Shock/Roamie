{"version":3,"sources":["../../../node_modules/lodash/assignIn.js"],"names":["copyObject","require","createAssigner","keysIn","assignIn","object","source","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,SAASF,QAAQ,UAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAIG,WAAWF,eAAe,UAASG,MAAT,EAAiBC,MAAjB,EAAyB;AACrDN,aAAWM,MAAX,EAAmBH,OAAOG,MAAP,CAAnB,EAAmCD,MAAnC;AACD,CAFc,CAAf;;AAIAE,OAAOC,OAAP,GAAiBJ,QAAjB","file":"assignIn.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n"]}