{"version":3,"sources":["../../../node_modules/lodash/_baseDelay.js"],"names":["FUNC_ERROR_TEXT","baseDelay","func","wait","args","TypeError","setTimeout","apply","undefined","module","exports"],"mappings":";;AAAA;AACA,IAAIA,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;AAUA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACnC,MAAI,OAAOF,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIG,SAAJ,CAAcL,eAAd,CAAN;AACD;AACD,SAAOM,WAAW,YAAW;AAAEJ,SAAKK,KAAL,CAAWC,SAAX,EAAsBJ,IAAtB;AAA8B,GAAtD,EAAwDD,IAAxD,CAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiBT,SAAjB","file":"_baseDelay.js","sourcesContent":["/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\n * to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Array} args The arguments to provide to `func`.\n * @returns {number|Object} Returns the timer id or timeout object.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n"]}