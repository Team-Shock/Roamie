{"version":3,"sources":["../../../node_modules/lodash/isMatch.js"],"names":["baseIsMatch","require","getMatchData","isMatch","object","source","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,iBAAR,CADnB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAASE,OAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiC;AAC/B,SAAOD,WAAWC,MAAX,IAAqBL,YAAYI,MAAZ,EAAoBC,MAApB,EAA4BH,aAAaG,MAAb,CAA5B,CAA5B;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,OAAjB","file":"isMatch.js","sourcesContent":["var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData');\n\n/**\n * Performs a partial deep comparison between `object` and `source` to\n * determine if `object` contains equivalent property values.\n *\n * **Note:** This method is equivalent to `_.matches` when `source` is\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.isMatch(object, { 'b': 2 });\n * // => true\n *\n * _.isMatch(object, { 'b': 1 });\n * // => false\n */\nfunction isMatch(object, source) {\n  return object === source || baseIsMatch(object, source, getMatchData(source));\n}\n\nmodule.exports = isMatch;\n"]}