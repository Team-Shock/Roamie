{"version":3,"sources":["../../../node_modules/lodash/words.js"],"names":["asciiWords","require","hasUnicodeWord","toString","unicodeWords","words","string","pattern","guard","undefined","match","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,WAAWF,QAAQ,YAAR,CAFf;AAAA,IAGIG,eAAeH,QAAQ,iBAAR,CAHnB;;AAKA;;;;;;;;;;;;;;;;;;;AAmBA,SAASI,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,KAAhC,EAAuC;AACrCF,WAASH,SAASG,MAAT,CAAT;AACAC,YAAUC,QAAQC,SAAR,GAAoBF,OAA9B;;AAEA,MAAIA,YAAYE,SAAhB,EAA2B;AACzB,WAAOP,eAAeI,MAAf,IAAyBF,aAAaE,MAAb,CAAzB,GAAgDN,WAAWM,MAAX,CAAvD;AACD;AACD,SAAOA,OAAOI,KAAP,CAAaH,OAAb,KAAyB,EAAhC;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,KAAjB","file":"words.js","sourcesContent":["var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"]}