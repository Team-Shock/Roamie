{"version":3,"sources":["../../../node_modules/lodash/toPlainObject.js"],"names":["copyObject","require","keysIn","toPlainObject","value","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,SAASD,QAAQ,UAAR,CADb;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOJ,WAAWI,KAAX,EAAkBF,OAAOE,KAAP,CAAlB,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBH,aAAjB","file":"toPlainObject.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n"]}