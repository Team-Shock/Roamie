{"version":3,"sources":["../../../node_modules/lodash/_isLaziable.js"],"names":["LazyWrapper","require","getData","getFuncName","lodash","isLaziable","func","funcName","other","prototype","data","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,UAAUD,QAAQ,YAAR,CADd;AAAA,IAEIE,cAAcF,QAAQ,gBAAR,CAFlB;AAAA,IAGIG,SAASH,QAAQ,iBAAR,CAHb;;AAKA;;;;;;;;AAQA,SAASI,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAIC,WAAWJ,YAAYG,IAAZ,CAAf;AAAA,MACIE,QAAQJ,OAAOG,QAAP,CADZ;;AAGA,MAAI,OAAOC,KAAP,IAAgB,UAAhB,IAA8B,EAAED,YAAYP,YAAYS,SAA1B,CAAlC,EAAwE;AACtE,WAAO,KAAP;AACD;AACD,MAAIH,SAASE,KAAb,EAAoB;AAClB,WAAO,IAAP;AACD;AACD,MAAIE,OAAOR,QAAQM,KAAR,CAAX;AACA,SAAO,CAAC,CAACE,IAAF,IAAUJ,SAASI,KAAK,CAAL,CAA1B;AACD;;AAEDC,OAAOC,OAAP,GAAiBP,UAAjB","file":"_isLaziable.js","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n"]}