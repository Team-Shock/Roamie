{"version":3,"sources":["../../../node_modules/lodash/_baseSet.js"],"names":["assignValue","require","castPath","isIndex","isObject","toKey","baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,WAAWD,QAAQ,aAAR,CADf;AAAA,IAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,IAGIG,WAAWH,QAAQ,YAAR,CAHf;AAAA,IAIII,QAAQJ,QAAQ,UAAR,CAJZ;;AAMA;;;;;;;;;;AAUA,SAASK,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkD;AAChD,MAAI,CAACN,SAASG,MAAT,CAAL,EAAuB;AACrB,WAAOA,MAAP;AACD;AACDC,SAAON,SAASM,IAAT,EAAeD,MAAf,CAAP;;AAEA,MAAII,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASJ,KAAKI,MADlB;AAAA,MAEIC,YAAYD,SAAS,CAFzB;AAAA,MAGIE,SAASP,MAHb;;AAKA,SAAOO,UAAU,IAAV,IAAkB,EAAEH,KAAF,GAAUC,MAAnC,EAA2C;AACzC,QAAIG,MAAMV,MAAMG,KAAKG,KAAL,CAAN,CAAV;AAAA,QACIK,WAAWP,KADf;;AAGA,QAAIE,SAASE,SAAb,EAAwB;AACtB,UAAII,WAAWH,OAAOC,GAAP,CAAf;AACAC,iBAAWN,aAAaA,WAAWO,QAAX,EAAqBF,GAArB,EAA0BD,MAA1B,CAAb,GAAiDI,SAA5D;AACA,UAAIF,aAAaE,SAAjB,EAA4B;AAC1BF,mBAAWZ,SAASa,QAAT,IACPA,QADO,GAENd,QAAQK,KAAKG,QAAQ,CAAb,CAAR,IAA2B,EAA3B,GAAgC,EAFrC;AAGD;AACF;AACDX,gBAAYc,MAAZ,EAAoBC,GAApB,EAAyBC,QAAzB;AACAF,aAASA,OAAOC,GAAP,CAAT;AACD;AACD,SAAOR,MAAP;AACD;;AAEDY,OAAOC,OAAP,GAAiBd,OAAjB","file":"_baseSet.js","sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n"]}