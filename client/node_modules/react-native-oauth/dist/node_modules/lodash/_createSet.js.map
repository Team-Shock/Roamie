{"version":3,"sources":["../../../node_modules/lodash/_createSet.js"],"names":["Set","require","noop","setToArray","INFINITY","createSet","values","module","exports"],"mappings":";;AAAA,IAAIA,MAAMC,QAAQ,QAAR,CAAV;AAAA,IACIC,OAAOD,QAAQ,QAAR,CADX;AAAA,IAEIE,aAAaF,QAAQ,eAAR,CAFjB;;AAIA;AACA,IAAIG,WAAW,IAAI,CAAnB;;AAEA;;;;;;;AAOA,IAAIC,YAAY,EAAEL,OAAQ,IAAIG,WAAW,IAAIH,GAAJ,CAAQ,GAAE,CAAC,CAAH,CAAR,CAAX,EAA2B,CAA3B,CAAL,IAAuCI,QAAhD,IAA4DF,IAA5D,GAAmE,UAASI,MAAT,EAAiB;AAClG,SAAO,IAAIN,GAAJ,CAAQM,MAAR,CAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAiBH,SAAjB","file":"_createSet.js","sourcesContent":["var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n"]}