{"version":3,"sources":["../../../node_modules/lodash/isFinite.js"],"names":["root","require","nativeIsFinite","isFinite","value","module","exports"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,SAAR,CAAX;;AAEA;AACA,IAAIC,iBAAiBF,KAAKG,QAA1B;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO,OAAOA,KAAP,IAAgB,QAAhB,IAA4BF,eAAeE,KAAf,CAAnC;AACD;;AAEDC,OAAOC,OAAP,GAAiBH,QAAjB","file":"isFinite.js","sourcesContent":["var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n"]}