{"version":3,"sources":["../../../node_modules/lodash/flatMap.js"],"names":["baseFlatten","require","map","flatMap","collection","iteratee","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,MAAMD,QAAQ,OAAR,CADV;;AAGA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASE,OAAT,CAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC;AACrC,SAAOL,YAAYE,IAAIE,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuC,CAAvC,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBJ,OAAjB","file":"flatMap.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n"]}