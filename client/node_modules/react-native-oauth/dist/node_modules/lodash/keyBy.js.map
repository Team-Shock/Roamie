{"version":3,"sources":["../../../node_modules/lodash/keyBy.js"],"names":["baseAssignValue","require","createAggregator","keyBy","result","value","key","module","exports"],"mappings":";;AAAA,IAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,IACIC,mBAAmBD,QAAQ,qBAAR,CADvB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAIE,QAAQD,iBAAiB,UAASE,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AACxDN,kBAAgBI,MAAhB,EAAwBE,GAAxB,EAA6BD,KAA7B;AACD,CAFW,CAAZ;;AAIAE,OAAOC,OAAP,GAAiBL,KAAjB","file":"keyBy.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n"]}