{"version":3,"sources":["../../../node_modules/lodash/rest.js"],"names":["baseRest","require","toInteger","FUNC_ERROR_TEXT","rest","func","start","TypeError","undefined","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,YAAYD,QAAQ,aAAR,CADhB;;AAGA;AACA,IAAIE,kBAAkB,qBAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2B;AACzB,MAAI,OAAOD,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIE,SAAJ,CAAcJ,eAAd,CAAN;AACD;AACDG,UAAQA,UAAUE,SAAV,GAAsBF,KAAtB,GAA8BJ,UAAUI,KAAV,CAAtC;AACA,SAAON,SAASK,IAAT,EAAeC,KAAf,CAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBN,IAAjB","file":"rest.js","sourcesContent":["var baseRest = require('./_baseRest'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start === undefined ? start : toInteger(start);\n  return baseRest(func, start);\n}\n\nmodule.exports = rest;\n"]}