{"version":3,"sources":["../../../node_modules/lodash/forEachRight.js"],"names":["arrayEachRight","require","baseEachRight","castFunction","isArray","forEachRight","collection","iteratee","func","module","exports"],"mappings":";;AAAA,IAAIA,iBAAiBC,QAAQ,mBAAR,CAArB;AAAA,IACIC,gBAAgBD,QAAQ,kBAAR,CADpB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,UAAUH,QAAQ,WAAR,CAHd;;AAKA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASI,YAAT,CAAsBC,UAAtB,EAAkCC,QAAlC,EAA4C;AAC1C,MAAIC,OAAOJ,QAAQE,UAAR,IAAsBN,cAAtB,GAAuCE,aAAlD;AACA,SAAOM,KAAKF,UAAL,EAAiBH,aAAaI,QAAb,CAAjB,CAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBL,YAAjB","file":"forEachRight.js","sourcesContent":["var arrayEachRight = require('./_arrayEachRight'),\n    baseEachRight = require('./_baseEachRight'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.forEach` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @alias eachRight\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEach\n * @example\n *\n * _.forEachRight([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `2` then `1`.\n */\nfunction forEachRight(collection, iteratee) {\n  var func = isArray(collection) ? arrayEachRight : baseEachRight;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEachRight;\n"]}