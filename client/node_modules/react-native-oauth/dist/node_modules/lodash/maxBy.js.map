{"version":3,"sources":["../../../node_modules/lodash/maxBy.js"],"names":["baseExtremum","require","baseGt","baseIteratee","maxBy","array","iteratee","length","undefined","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,IACIC,SAASD,QAAQ,WAAR,CADb;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;;AAIA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASG,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAQD,SAASA,MAAME,MAAhB,GACHP,aAAaK,KAAb,EAAoBF,aAAaG,QAAb,EAAuB,CAAvB,CAApB,EAA+CJ,MAA/C,CADG,GAEHM,SAFJ;AAGD;;AAEDC,OAAOC,OAAP,GAAiBN,KAAjB","file":"maxBy.js","sourcesContent":["var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n"]}