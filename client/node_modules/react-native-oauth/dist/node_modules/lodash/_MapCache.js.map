{"version":3,"sources":["../../../node_modules/lodash/_MapCache.js"],"names":["mapCacheClear","require","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","entries","index","length","clear","entry","set","prototype","get","has","module","exports"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,kBAAR,CAApB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,cAAcF,QAAQ,gBAAR,CAFlB;AAAA,IAGIG,cAAcH,QAAQ,gBAAR,CAHlB;AAAA,IAIII,cAAcJ,QAAQ,gBAAR,CAJlB;;AAMA;;;;;;;AAOA,SAASK,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,QAAIC,QAAQ,CAAC,CAAb;AAAA,QACIC,SAASF,WAAW,IAAX,GAAkB,CAAlB,GAAsBA,QAAQE,MAD3C;;AAGA,SAAKC,KAAL;AACA,WAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,YAAIE,QAAQJ,QAAQC,KAAR,CAAZ;AACA,aAAKI,GAAL,CAASD,MAAM,CAAN,CAAT,EAAmBA,MAAM,CAAN,CAAnB;AACD;AACF;;AAED;AACAL,SAASO,SAAT,CAAmBH,KAAnB,GAA2BV,aAA3B;AACAM,SAASO,SAAT,CAAmB,QAAnB,IAA+BX,cAA/B;AACAI,SAASO,SAAT,CAAmBC,GAAnB,GAAyBX,WAAzB;AACAG,SAASO,SAAT,CAAmBE,GAAnB,GAAyBX,WAAzB;AACAE,SAASO,SAAT,CAAmBD,GAAnB,GAAyBP,WAAzB;;AAEAW,OAAOC,OAAP,GAAiBX,QAAjB","file":"_MapCache.js","sourcesContent":["var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n"]}