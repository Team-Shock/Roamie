{"version":3,"sources":["../../../node_modules/lodash/_arrayReduceRight.js"],"names":["arrayReduceRight","array","iteratee","accumulator","initAccum","length","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;AAYA,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,QAAjC,EAA2CC,WAA3C,EAAwDC,SAAxD,EAAmE;AACjE,MAAIC,SAASJ,SAAS,IAAT,GAAgB,CAAhB,GAAoBA,MAAMI,MAAvC;AACA,MAAID,aAAaC,MAAjB,EAAyB;AACvBF,kBAAcF,MAAM,EAAEI,MAAR,CAAd;AACD;AACD,SAAOA,QAAP,EAAiB;AACfF,kBAAcD,SAASC,WAAT,EAAsBF,MAAMI,MAAN,CAAtB,EAAqCA,MAArC,EAA6CJ,KAA7C,CAAd;AACD;AACD,SAAOE,WAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBP,gBAAjB","file":"_arrayReduceRight.js","sourcesContent":["/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the last element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\n  var length = array == null ? 0 : array.length;\n  if (initAccum && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduceRight;\n"]}