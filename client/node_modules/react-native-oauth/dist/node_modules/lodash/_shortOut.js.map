{"version":3,"sources":["../../../node_modules/lodash/_shortOut.js"],"names":["HOT_COUNT","HOT_SPAN","nativeNow","Date","now","shortOut","func","count","lastCalled","stamp","remaining","arguments","apply","undefined","module","exports"],"mappings":";;AAAA;AACA,IAAIA,YAAY,GAAhB;AAAA,IACIC,WAAW,EADf;;AAGA;AACA,IAAIC,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;AASA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,MAAIC,QAAQ,CAAZ;AAAA,MACIC,aAAa,CADjB;;AAGA,SAAO,YAAW;AAChB,QAAIC,QAAQP,WAAZ;AAAA,QACIQ,YAAYT,YAAYQ,QAAQD,UAApB,CADhB;;AAGAA,iBAAaC,KAAb;AACA,QAAIC,YAAY,CAAhB,EAAmB;AACjB,UAAI,EAAEH,KAAF,IAAWP,SAAf,EAA0B;AACxB,eAAOW,UAAU,CAAV,CAAP;AACD;AACF,KAJD,MAIO;AACLJ,cAAQ,CAAR;AACD;AACD,WAAOD,KAAKM,KAAL,CAAWC,SAAX,EAAsBF,SAAtB,CAAP;AACD,GAbD;AAcD;;AAEDG,OAAOC,OAAP,GAAiBV,QAAjB","file":"_shortOut.js","sourcesContent":["/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n"]}