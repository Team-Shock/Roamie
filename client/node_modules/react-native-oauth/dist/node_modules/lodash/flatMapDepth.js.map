{"version":3,"sources":["../../../node_modules/lodash/flatMapDepth.js"],"names":["baseFlatten","require","map","toInteger","flatMapDepth","collection","iteratee","depth","undefined","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,MAAMD,QAAQ,OAAR,CADV;AAAA,IAEIE,YAAYF,QAAQ,aAAR,CAFhB;;AAIA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASG,YAAT,CAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AACjDA,UAAQA,UAAUC,SAAV,GAAsB,CAAtB,GAA0BL,UAAUI,KAAV,CAAlC;AACA,SAAOP,YAAYE,IAAIG,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuCC,KAAvC,CAAP;AACD;;AAEDE,OAAOC,OAAP,GAAiBN,YAAjB","file":"flatMapDepth.js","sourcesContent":["var baseFlatten = require('./_baseFlatten'),\n    map = require('./map'),\n    toInteger = require('./toInteger');\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */\nfunction flatMapDepth(collection, iteratee, depth) {\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(map(collection, iteratee), depth);\n}\n\nmodule.exports = flatMapDepth;\n"]}