{"version":3,"sources":["../../../node_modules/lodash/_isIterateeCall.js"],"names":["eq","require","isArrayLike","isIndex","isObject","isIterateeCall","value","index","object","type","length","module","exports"],"mappings":";;;;AAAA,IAAIA,KAAKC,QAAQ,MAAR,CAAT;AAAA,IACIC,cAAcD,QAAQ,eAAR,CADlB;AAAA,IAEIE,UAAUF,QAAQ,YAAR,CAFd;AAAA,IAGIG,WAAWH,QAAQ,YAAR,CAHf;;AAKA;;;;;;;;;;AAUA,SAASI,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAACJ,SAASI,MAAT,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;AACD,MAAIC,cAAcF,KAAd,yCAAcA,KAAd,CAAJ;AACA,MAAIE,QAAQ,QAAR,GACKP,YAAYM,MAAZ,KAAuBL,QAAQI,KAAR,EAAeC,OAAOE,MAAtB,CAD5B,GAEKD,QAAQ,QAAR,IAAoBF,SAASC,MAFtC,EAGM;AACJ,WAAOR,GAAGQ,OAAOD,KAAP,CAAH,EAAkBD,KAAlB,CAAP;AACD;AACD,SAAO,KAAP;AACD;;AAEDK,OAAOC,OAAP,GAAiBP,cAAjB","file":"_isIterateeCall.js","sourcesContent":["var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]}