{"version":3,"sources":["../../../node_modules/lodash/assignInWith.js"],"names":["copyObject","require","createAssigner","keysIn","assignInWith","object","source","srcIndex","customizer","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,SAASF,QAAQ,UAAR,CAFb;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,IAAIG,eAAeF,eAAe,UAASG,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,UAAnC,EAA+C;AAC/ER,aAAWM,MAAX,EAAmBH,OAAOG,MAAP,CAAnB,EAAmCD,MAAnC,EAA2CG,UAA3C;AACD,CAFkB,CAAnB;;AAIAC,OAAOC,OAAP,GAAiBN,YAAjB","file":"assignInWith.js","sourcesContent":["var copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nmodule.exports = assignInWith;\n"]}