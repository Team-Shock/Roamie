{"version":3,"sources":["../../../node_modules/lodash/_createHybrid.js"],"names":["composeArgs","require","composeArgsRight","countHolders","createCtor","createRecurry","getHolder","reorder","replaceHolders","root","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_FLIP_FLAG","createHybrid","func","bitmask","thisArg","partials","holders","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isCurried","isFlip","Ctor","undefined","wrapper","length","arguments","args","Array","index","placeholder","holdersCount","newHolders","thisBinding","fn","reverse","apply","module","exports"],"mappings":"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","file":"_createHybrid.js","sourcesContent":["var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n"]}