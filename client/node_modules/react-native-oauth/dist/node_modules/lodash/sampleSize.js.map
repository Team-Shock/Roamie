{"version":3,"sources":["../../../node_modules/lodash/sampleSize.js"],"names":["arraySampleSize","require","baseSampleSize","isArray","isIterateeCall","toInteger","sampleSize","collection","n","guard","undefined","func","module","exports"],"mappings":";;AAAA,IAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,IACIC,iBAAiBD,QAAQ,mBAAR,CADrB;AAAA,IAEIE,UAAUF,QAAQ,WAAR,CAFd;AAAA,IAGIG,iBAAiBH,QAAQ,mBAAR,CAHrB;AAAA,IAIII,YAAYJ,QAAQ,aAAR,CAJhB;;AAMA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASK,UAAT,CAAoBC,UAApB,EAAgCC,CAAhC,EAAmCC,KAAnC,EAA0C;AACxC,MAAKA,QAAQL,eAAeG,UAAf,EAA2BC,CAA3B,EAA8BC,KAA9B,CAAR,GAA+CD,MAAME,SAA1D,EAAsE;AACpEF,QAAI,CAAJ;AACD,GAFD,MAEO;AACLA,QAAIH,UAAUG,CAAV,CAAJ;AACD;AACD,MAAIG,OAAOR,QAAQI,UAAR,IAAsBP,eAAtB,GAAwCE,cAAnD;AACA,SAAOS,KAAKJ,UAAL,EAAiBC,CAAjB,CAAP;AACD;;AAEDI,OAAOC,OAAP,GAAiBP,UAAjB","file":"sampleSize.js","sourcesContent":["var arraySampleSize = require('./_arraySampleSize'),\n    baseSampleSize = require('./_baseSampleSize'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\nfunction sampleSize(collection, n, guard) {\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nmodule.exports = sampleSize;\n"]}