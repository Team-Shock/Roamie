{"version":3,"sources":["../../../node_modules/lodash/_createCurry.js"],"names":["apply","require","createCtor","createHybrid","createRecurry","getHolder","replaceHolders","root","createCurry","func","bitmask","arity","Ctor","wrapper","length","arguments","args","Array","index","placeholder","holders","undefined","fn","module","exports"],"mappings":";;AAAA,IAAIA,QAAQC,QAAQ,UAAR,CAAZ;AAAA,IACIC,aAAaD,QAAQ,eAAR,CADjB;AAAA,IAEIE,eAAeF,QAAQ,iBAAR,CAFnB;AAAA,IAGIG,gBAAgBH,QAAQ,kBAAR,CAHpB;AAAA,IAIII,YAAYJ,QAAQ,cAAR,CAJhB;AAAA,IAKIK,iBAAiBL,QAAQ,mBAAR,CALrB;AAAA,IAMIM,OAAON,QAAQ,SAAR,CANX;;AAQA;;;;;;;;;AASA,SAASO,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,KAApC,EAA2C;AACzC,MAAIC,OAAOV,WAAWO,IAAX,CAAX;;AAEA,WAASI,OAAT,GAAmB;AACjB,QAAIC,SAASC,UAAUD,MAAvB;AAAA,QACIE,OAAOC,MAAMH,MAAN,CADX;AAAA,QAEII,QAAQJ,MAFZ;AAAA,QAGIK,cAAcd,UAAUQ,OAAV,CAHlB;;AAKA,WAAOK,OAAP,EAAgB;AACdF,WAAKE,KAAL,IAAcH,UAAUG,KAAV,CAAd;AACD;AACD,QAAIE,UAAWN,SAAS,CAAT,IAAcE,KAAK,CAAL,MAAYG,WAA1B,IAAyCH,KAAKF,SAAS,CAAd,MAAqBK,WAA/D,GACV,EADU,GAEVb,eAAeU,IAAf,EAAqBG,WAArB,CAFJ;;AAIAL,cAAUM,QAAQN,MAAlB;AACA,QAAIA,SAASH,KAAb,EAAoB;AAClB,aAAOP,cACLK,IADK,EACCC,OADD,EACUP,YADV,EACwBU,QAAQM,WADhC,EAC6CE,SAD7C,EAELL,IAFK,EAECI,OAFD,EAEUC,SAFV,EAEqBA,SAFrB,EAEgCV,QAAQG,MAFxC,CAAP;AAGD;AACD,QAAIQ,KAAM,QAAQ,SAASf,IAAjB,IAAyB,gBAAgBM,OAA1C,GAAqDD,IAArD,GAA4DH,IAArE;AACA,WAAOT,MAAMsB,EAAN,EAAU,IAAV,EAAgBN,IAAhB,CAAP;AACD;AACD,SAAOH,OAAP;AACD;;AAEDU,OAAOC,OAAP,GAAiBhB,WAAjB","file":"_createCurry.js","sourcesContent":["var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n"]}