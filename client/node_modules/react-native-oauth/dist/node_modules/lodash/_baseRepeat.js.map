{"version":3,"sources":["../../../node_modules/lodash/_baseRepeat.js"],"names":["MAX_SAFE_INTEGER","nativeFloor","Math","floor","baseRepeat","string","n","result","module","exports"],"mappings":";;AAAA;AACA,IAAIA,mBAAmB,gBAAvB;;AAEA;AACA,IAAIC,cAAcC,KAAKC,KAAvB;;AAEA;;;;;;;;AAQA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,CAA5B,EAA+B;AAC7B,MAAIC,SAAS,EAAb;AACA,MAAI,CAACF,MAAD,IAAWC,IAAI,CAAf,IAAoBA,IAAIN,gBAA5B,EAA8C;AAC5C,WAAOO,MAAP;AACD;AACD;AACA;AACA,KAAG;AACD,QAAID,IAAI,CAAR,EAAW;AACTC,gBAAUF,MAAV;AACD;AACDC,QAAIL,YAAYK,IAAI,CAAhB,CAAJ;AACA,QAAIA,CAAJ,EAAO;AACLD,gBAAUA,MAAV;AACD;AACF,GARD,QAQSC,CART;;AAUA,SAAOC,MAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBL,UAAjB","file":"_baseRepeat.js","sourcesContent":["/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nmodule.exports = baseRepeat;\n"]}