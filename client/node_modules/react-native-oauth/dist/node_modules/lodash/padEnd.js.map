{"version":3,"sources":["../../../node_modules/lodash/padEnd.js"],"names":["createPadding","require","stringSize","toInteger","toString","padEnd","string","length","chars","strLength","module","exports"],"mappings":";;AAAA,IAAIA,gBAAgBC,QAAQ,kBAAR,CAApB;AAAA,IACIC,aAAaD,QAAQ,eAAR,CADjB;AAAA,IAEIE,YAAYF,QAAQ,aAAR,CAFhB;AAAA,IAGIG,WAAWH,QAAQ,YAAR,CAHf;;AAKA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASI,MAAT,CAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AACrCF,aAASF,SAASE,MAAT,CAAT;AACAC,aAASJ,UAAUI,MAAV,CAAT;;AAEA,QAAIE,YAAYF,SAASL,WAAWI,MAAX,CAAT,GAA8B,CAA9C;AACA,WAAQC,UAAUE,YAAYF,MAAvB,GACFD,SAASN,cAAcO,SAASE,SAAvB,EAAkCD,KAAlC,CADP,GAEHF,MAFJ;AAGD;;AAEDI,OAAOC,OAAP,GAAiBN,MAAjB","file":"padEnd.js","sourcesContent":["var createPadding = require('./_createPadding'),\n    stringSize = require('./_stringSize'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nmodule.exports = padEnd;\n"]}