{"version":3,"sources":["../../../node_modules/lodash/_reorder.js"],"names":["copyArray","require","isIndex","nativeMin","Math","min","reorder","array","indexes","arrLength","length","oldArray","index","undefined","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,IACIC,UAAUD,QAAQ,YAAR,CADd;;AAGA;AACA,IAAIE,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;;AAUA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,OAAxB,EAAiC;AAC/B,MAAIC,YAAYF,MAAMG,MAAtB;AAAA,MACIA,SAASP,UAAUK,QAAQE,MAAlB,EAA0BD,SAA1B,CADb;AAAA,MAEIE,WAAWX,UAAUO,KAAV,CAFf;;AAIA,SAAOG,QAAP,EAAiB;AACf,QAAIE,QAAQJ,QAAQE,MAAR,CAAZ;AACAH,UAAMG,MAAN,IAAgBR,QAAQU,KAAR,EAAeH,SAAf,IAA4BE,SAASC,KAAT,CAA5B,GAA8CC,SAA9D;AACD;AACD,SAAON,KAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBT,OAAjB","file":"_reorder.js","sourcesContent":["var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n"]}