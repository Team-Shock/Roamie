{"version":3,"sources":["../../../node_modules/lodash/_baseIsEqual.js"],"names":["baseIsEqualDeep","require","isObjectLike","baseIsEqual","value","other","bitmask","customizer","stack","module","exports"],"mappings":";;AAAA,IAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,IACIC,eAAeD,QAAQ,gBAAR,CADnB;;AAGA;;;;;;;;;;;;;;AAcA,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,UAA5C,EAAwDC,KAAxD,EAA+D;AAC7D,MAAIJ,UAAUC,KAAd,EAAqB;AACnB,WAAO,IAAP;AACD;AACD,MAAID,SAAS,IAAT,IAAiBC,SAAS,IAA1B,IAAmC,CAACH,aAAaE,KAAb,CAAD,IAAwB,CAACF,aAAaG,KAAb,CAAhE,EAAsF;AACpF,WAAOD,UAAUA,KAAV,IAAmBC,UAAUA,KAApC;AACD;AACD,SAAOL,gBAAgBI,KAAhB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,UAAvC,EAAmDJ,WAAnD,EAAgEK,KAAhE,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBP,WAAjB","file":"_baseIsEqual.js","sourcesContent":["var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n"]}