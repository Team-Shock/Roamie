{"version":3,"sources":["../../../node_modules/lodash/_baseFindKey.js"],"names":["baseFindKey","collection","predicate","eachFunc","result","value","key","module","exports"],"mappings":";;AAAA;;;;;;;;;;;AAWA,SAASA,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsD;AACpD,MAAIC,MAAJ;AACAD,WAASF,UAAT,EAAqB,UAASI,KAAT,EAAgBC,GAAhB,EAAqBL,UAArB,EAAiC;AACpD,QAAIC,UAAUG,KAAV,EAAiBC,GAAjB,EAAsBL,UAAtB,CAAJ,EAAuC;AACrCG,eAASE,GAAT;AACA,aAAO,KAAP;AACD;AACF,GALD;AAMA,SAAOF,MAAP;AACD;;AAEDG,OAAOC,OAAP,GAAiBR,WAAjB","file":"_baseFindKey.js","sourcesContent":["/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFindKey;\n"]}