{"version":3,"sources":["../../../node_modules/lodash/toInteger.js"],"names":["toFinite","require","toInteger","value","result","remainder","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,YAAR,CAAf;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,SAASJ,SAASG,KAAT,CAAb;AAAA,MACIE,YAAYD,SAAS,CADzB;;AAGA,SAAOA,WAAWA,MAAX,GAAqBC,YAAYD,SAASC,SAArB,GAAiCD,MAAtD,GAAgE,CAAvE;AACD;;AAEDE,OAAOC,OAAP,GAAiBL,SAAjB","file":"toInteger.js","sourcesContent":["var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"]}