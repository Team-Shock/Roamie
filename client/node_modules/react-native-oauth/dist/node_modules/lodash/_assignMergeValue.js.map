{"version":3,"sources":["../../../node_modules/lodash/_assignMergeValue.js"],"names":["baseAssignValue","require","eq","assignMergeValue","object","key","value","undefined","module","exports"],"mappings":";;AAAA,IAAIA,kBAAkBC,QAAQ,oBAAR,CAAtB;AAAA,IACIC,KAAKD,QAAQ,MAAR,CADT;;AAGA;;;;;;;;;AASA,SAASE,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AAC5C,MAAKA,UAAUC,SAAV,IAAuB,CAACL,GAAGE,OAAOC,GAAP,CAAH,EAAgBC,KAAhB,CAAzB,IACCA,UAAUC,SAAV,IAAuB,EAAEF,OAAOD,MAAT,CAD5B,EAC+C;AAC7CJ,oBAAgBI,MAAhB,EAAwBC,GAAxB,EAA6BC,KAA7B;AACD;AACF;;AAEDE,OAAOC,OAAP,GAAiBN,gBAAjB","file":"_assignMergeValue.js","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n"]}