{"version":3,"sources":["../../../node_modules/lodash/wrapperAt.js"],"names":["LazyWrapper","require","LodashWrapper","baseAt","flatRest","isIndex","thru","wrapperAt","paths","length","start","value","__wrapped__","interceptor","object","__actions__","slice","push","undefined","__chain__","array","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,gBAAgBD,QAAQ,kBAAR,CADpB;AAAA,IAEIE,SAASF,QAAQ,WAAR,CAFb;AAAA,IAGIG,WAAWH,QAAQ,aAAR,CAHf;AAAA,IAIII,UAAUJ,QAAQ,YAAR,CAJd;AAAA,IAKIK,OAAOL,QAAQ,QAAR,CALX;;AAOA;;;;;;;;;;;;;;;;AAgBA,IAAIM,YAAYH,SAAS,UAASI,KAAT,EAAgB;AACvC,MAAIC,SAASD,MAAMC,MAAnB;AAAA,MACIC,QAAQD,SAASD,MAAM,CAAN,CAAT,GAAoB,CADhC;AAAA,MAEIG,QAAQ,KAAKC,WAFjB;AAAA,MAGIC,cAAc,SAAdA,WAAc,CAASC,MAAT,EAAiB;AAAE,WAAOX,OAAOW,MAAP,EAAeN,KAAf,CAAP;AAA+B,GAHpE;;AAKA,MAAIC,SAAS,CAAT,IAAc,KAAKM,WAAL,CAAiBN,MAA/B,IACA,EAAEE,iBAAiBX,WAAnB,CADA,IACmC,CAACK,QAAQK,KAAR,CADxC,EACwD;AACtD,WAAO,KAAKJ,IAAL,CAAUO,WAAV,CAAP;AACD;AACDF,UAAQA,MAAMK,KAAN,CAAYN,KAAZ,EAAmB,CAACA,KAAD,IAAUD,SAAS,CAAT,GAAa,CAAvB,CAAnB,CAAR;AACAE,QAAMI,WAAN,CAAkBE,IAAlB,CAAuB;AACrB,YAAQX,IADa;AAErB,YAAQ,CAACO,WAAD,CAFa;AAGrB,eAAWK;AAHU,GAAvB;AAKA,SAAO,IAAIhB,aAAJ,CAAkBS,KAAlB,EAAyB,KAAKQ,SAA9B,EAAyCb,IAAzC,CAA8C,UAASc,KAAT,EAAgB;AACnE,QAAIX,UAAU,CAACW,MAAMX,MAArB,EAA6B;AAC3BW,YAAMH,IAAN,CAAWC,SAAX;AACD;AACD,WAAOE,KAAP;AACD,GALM,CAAP;AAMD,CAtBe,CAAhB;;AAwBAC,OAAOC,OAAP,GAAiBf,SAAjB","file":"wrapperAt.js","sourcesContent":["var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseAt = require('./_baseAt'),\n    flatRest = require('./_flatRest'),\n    isIndex = require('./_isIndex'),\n    thru = require('./thru');\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = flatRest(function(paths) {\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nmodule.exports = wrapperAt;\n"]}