{"version":3,"sources":["../../../node_modules/lodash/sortedLastIndexBy.js"],"names":["baseIteratee","require","baseSortedIndexBy","sortedLastIndexBy","array","value","iteratee","module","exports"],"mappings":";;AAAA,IAAIA,eAAeC,QAAQ,iBAAR,CAAnB;AAAA,IACIC,oBAAoBD,QAAQ,sBAAR,CADxB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASE,iBAAT,CAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmD;AACjD,SAAOJ,kBAAkBE,KAAlB,EAAyBC,KAAzB,EAAgCL,aAAaM,QAAb,EAAuB,CAAvB,CAAhC,EAA2D,IAA3D,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBL,iBAAjB","file":"sortedLastIndexBy.js","sourcesContent":["var baseIteratee = require('./_baseIteratee'),\n    baseSortedIndexBy = require('./_baseSortedIndexBy');\n\n/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n * // => 1\n */\nfunction sortedLastIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2), true);\n}\n\nmodule.exports = sortedLastIndexBy;\n"]}