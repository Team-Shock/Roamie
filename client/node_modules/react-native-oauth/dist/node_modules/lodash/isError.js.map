{"version":3,"sources":["../../../node_modules/lodash/isError.js"],"names":["baseGetTag","require","isObjectLike","isPlainObject","domExcTag","errorTag","isError","value","tag","message","name","module","exports"],"mappings":";;AAAA,IAAIA,aAAaC,QAAQ,eAAR,CAAjB;AAAA,IACIC,eAAeD,QAAQ,gBAAR,CADnB;AAAA,IAEIE,gBAAgBF,QAAQ,iBAAR,CAFpB;;AAIA;AACA,IAAIG,YAAY,uBAAhB;AAAA,IACIC,WAAW,gBADf;;AAGA;;;;;;;;;;;;;;;;;;AAkBA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAI,CAACL,aAAaK,KAAb,CAAL,EAA0B;AACxB,eAAO,KAAP;AACD;AACD,QAAIC,MAAMR,WAAWO,KAAX,CAAV;AACA,WAAOC,OAAOH,QAAP,IAAmBG,OAAOJ,SAA1B,IACJ,OAAOG,MAAME,OAAb,IAAwB,QAAxB,IAAoC,OAAOF,MAAMG,IAAb,IAAqB,QAAzD,IAAqE,CAACP,cAAcI,KAAd,CADzE;AAED;;AAEDI,OAAOC,OAAP,GAAiBN,OAAjB","file":"isError.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike'),\n    isPlainObject = require('./isPlainObject');\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nmodule.exports = isError;\n"]}