{"version":3,"sources":["../../../node_modules/lodash/_baseIsEqualDeep.js"],"names":["Stack","require","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","Object","prototype","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","value","othUnwrapped","module","exports"],"mappings":"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","file":"_baseIsEqualDeep.js","sourcesContent":["var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n"]}