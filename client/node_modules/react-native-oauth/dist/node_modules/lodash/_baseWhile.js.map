{"version":3,"sources":["../../../node_modules/lodash/_baseWhile.js"],"names":["baseSlice","require","baseWhile","array","predicate","isDrop","fromRight","length","index","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,cAAR,CAAhB;;AAEA;;;;;;;;;;;AAWA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwD;AACtD,MAAIC,SAASJ,MAAMI,MAAnB;AAAA,MACIC,QAAQF,YAAYC,MAAZ,GAAqB,CAAC,CADlC;;AAGA,SAAO,CAACD,YAAYE,OAAZ,GAAsB,EAAEA,KAAF,GAAUD,MAAjC,KACLH,UAAUD,MAAMK,KAAN,CAAV,EAAwBA,KAAxB,EAA+BL,KAA/B,CADF,EACyC,CAAE;;AAE3C,SAAOE,SACHL,UAAUG,KAAV,EAAkBG,YAAY,CAAZ,GAAgBE,KAAlC,EAA2CF,YAAYE,QAAQ,CAApB,GAAwBD,MAAnE,CADG,GAEHP,UAAUG,KAAV,EAAkBG,YAAYE,QAAQ,CAApB,GAAwB,CAA1C,EAA+CF,YAAYC,MAAZ,GAAqBC,KAApE,CAFJ;AAGD;;AAEDC,OAAOC,OAAP,GAAiBR,SAAjB","file":"_baseWhile.js","sourcesContent":["var baseSlice = require('./_baseSlice');\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) &&\n    predicate(array[index], index, array)) {}\n\n  return isDrop\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n}\n\nmodule.exports = baseWhile;\n"]}