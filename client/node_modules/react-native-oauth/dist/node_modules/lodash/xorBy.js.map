{"version":3,"sources":["../../../node_modules/lodash/xorBy.js"],"names":["arrayFilter","require","baseIteratee","baseRest","baseXor","isArrayLikeObject","last","xorBy","arrays","iteratee","undefined","module","exports"],"mappings":";;AAAA,IAAIA,cAAcC,QAAQ,gBAAR,CAAlB;AAAA,IACIC,eAAeD,QAAQ,iBAAR,CADnB;AAAA,IAEIE,WAAWF,QAAQ,aAAR,CAFf;AAAA,IAGIG,UAAUH,QAAQ,YAAR,CAHd;AAAA,IAIII,oBAAoBJ,QAAQ,qBAAR,CAJxB;AAAA,IAKIK,OAAOL,QAAQ,QAAR,CALX;;AAOA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIM,QAAQJ,SAAS,UAASK,MAAT,EAAiB;AACpC,MAAIC,WAAWH,KAAKE,MAAL,CAAf;AACA,MAAIH,kBAAkBI,QAAlB,CAAJ,EAAiC;AAC/BA,eAAWC,SAAX;AACD;AACD,SAAON,QAAQJ,YAAYQ,MAAZ,EAAoBH,iBAApB,CAAR,EAAgDH,aAAaO,QAAb,EAAuB,CAAvB,CAAhD,CAAP;AACD,CANW,CAAZ;;AAQAE,OAAOC,OAAP,GAAiBL,KAAjB","file":"xorBy.js","sourcesContent":["var arrayFilter = require('./_arrayFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    baseRest = require('./_baseRest'),\n    baseXor = require('./_baseXor'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The order of result values is determined\n * by the order they occur in the arrays. The iteratee is invoked with one\n * argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2, 3.4]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));\n});\n\nmodule.exports = xorBy;\n"]}