{"version":3,"sources":["../../../node_modules/lodash/_basePullAt.js"],"names":["baseUnset","require","isIndex","arrayProto","Array","prototype","splice","basePullAt","array","indexes","length","lastIndex","index","previous","call","module","exports"],"mappings":";;AAAA,IAAIA,YAAYC,QAAQ,cAAR,CAAhB;AAAA,IACIC,UAAUD,QAAQ,YAAR,CADd;;AAGA;AACA,IAAIE,aAAaC,MAAMC,SAAvB;;AAEA;AACA,IAAIC,SAASH,WAAWG,MAAxB;;AAEA;;;;;;;;;AASA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AAClC,MAAIC,SAASF,QAAQC,QAAQC,MAAhB,GAAyB,CAAtC;AAAA,MACIC,YAAYD,SAAS,CADzB;;AAGA,SAAOA,QAAP,EAAiB;AACf,QAAIE,QAAQH,QAAQC,MAAR,CAAZ;AACA,QAAIA,UAAUC,SAAV,IAAuBC,UAAUC,QAArC,EAA+C;AAC7C,UAAIA,WAAWD,KAAf;AACA,UAAIV,QAAQU,KAAR,CAAJ,EAAoB;AAClBN,eAAOQ,IAAP,CAAYN,KAAZ,EAAmBI,KAAnB,EAA0B,CAA1B;AACD,OAFD,MAEO;AACLZ,kBAAUQ,KAAV,EAAiBI,KAAjB;AACD;AACF;AACF;AACD,SAAOJ,KAAP;AACD;;AAEDO,OAAOC,OAAP,GAAiBT,UAAjB","file":"_basePullAt.js","sourcesContent":["var baseUnset = require('./_baseUnset'),\n    isIndex = require('./_isIndex');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n"]}