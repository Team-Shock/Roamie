{"version":3,"sources":["../../../node_modules/lodash/truncate.js"],"names":["baseToString","require","castSlice","hasUnicode","isObject","isRegExp","stringSize","stringToArray","toInteger","toString","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","reFlags","truncate","string","options","length","omission","separator","strLength","strSymbols","end","result","join","slice","undefined","search","match","substring","global","RegExp","source","exec","lastIndex","newEnd","index","indexOf","lastIndexOf","module","exports"],"mappings":"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","file":"truncate.js","sourcesContent":["var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    isObject = require('./isObject'),\n    isRegExp = require('./isRegExp'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nmodule.exports = truncate;\n"]}