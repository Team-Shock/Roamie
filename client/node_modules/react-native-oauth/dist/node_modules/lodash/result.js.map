{"version":3,"sources":["../../../node_modules/lodash/result.js"],"names":["castPath","require","isFunction","toKey","result","object","path","defaultValue","index","length","undefined","value","call","module","exports"],"mappings":";;AAAA,IAAIA,WAAWC,QAAQ,aAAR,CAAf;AAAA,IACIC,aAAaD,QAAQ,cAAR,CADjB;AAAA,IAEIE,QAAQF,QAAQ,UAAR,CAFZ;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAASG,MAAT,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4C;AAC1CD,SAAON,SAASM,IAAT,EAAeD,MAAf,CAAP;;AAEA,MAAIG,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASH,KAAKG,MADlB;;AAGA;AACA,MAAI,CAACA,MAAL,EAAa;AACXA,aAAS,CAAT;AACAJ,aAASK,SAAT;AACD;AACD,SAAO,EAAEF,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIE,QAAQN,UAAU,IAAV,GAAiBK,SAAjB,GAA6BL,OAAOF,MAAMG,KAAKE,KAAL,CAAN,CAAP,CAAzC;AACA,QAAIG,UAAUD,SAAd,EAAyB;AACvBF,cAAQC,MAAR;AACAE,cAAQJ,YAAR;AACD;AACDF,aAASH,WAAWS,KAAX,IAAoBA,MAAMC,IAAN,CAAWP,MAAX,CAApB,GAAyCM,KAAlD;AACD;AACD,SAAON,MAAP;AACD;;AAEDQ,OAAOC,OAAP,GAAiBV,MAAjB","file":"result.js","sourcesContent":["var castPath = require('./_castPath'),\n    isFunction = require('./isFunction'),\n    toKey = require('./_toKey');\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    length = 1;\n    object = undefined;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nmodule.exports = result;\n"]}