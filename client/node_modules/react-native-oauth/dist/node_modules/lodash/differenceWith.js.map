{"version":3,"sources":["../../../node_modules/lodash/differenceWith.js"],"names":["baseDifference","require","baseFlatten","baseRest","isArrayLikeObject","last","differenceWith","array","values","comparator","undefined","module","exports"],"mappings":";;AAAA,IAAIA,iBAAiBC,QAAQ,mBAAR,CAArB;AAAA,IACIC,cAAcD,QAAQ,gBAAR,CADlB;AAAA,IAEIE,WAAWF,QAAQ,aAAR,CAFf;AAAA,IAGIG,oBAAoBH,QAAQ,qBAAR,CAHxB;AAAA,IAIII,OAAOJ,QAAQ,QAAR,CAJX;;AAMA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAIK,iBAAiBH,SAAS,UAASI,KAAT,EAAgBC,MAAhB,EAAwB;AACpD,MAAIC,aAAaJ,KAAKG,MAAL,CAAjB;AACA,MAAIJ,kBAAkBK,UAAlB,CAAJ,EAAmC;AACjCA,iBAAaC,SAAb;AACD;AACD,SAAON,kBAAkBG,KAAlB,IACHP,eAAeO,KAAf,EAAsBL,YAAYM,MAAZ,EAAoB,CAApB,EAAuBJ,iBAAvB,EAA0C,IAA1C,CAAtB,EAAuEM,SAAvE,EAAkFD,UAAlF,CADG,GAEH,EAFJ;AAGD,CARoB,CAArB;;AAUAE,OAAOC,OAAP,GAAiBN,cAAjB","file":"differenceWith.js","sourcesContent":["var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. The order and\n * references of result values are determined by the first array. The comparator\n * is invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = baseRest(function(array, values) {\n  var comparator = last(values);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n    : [];\n});\n\nmodule.exports = differenceWith;\n"]}