{"version":3,"sources":["../../../../../node_modules/core-js/library/modules/es7.string.match-all.js"],"names":["$export","require","defined","toLength","isRegExp","getFlags","RegExpProto","RegExp","prototype","$RegExpStringIterator","regexp","string","_r","_s","next","match","exec","value","done","P","matchAll","TypeError","S","String","flags","call","rx","source","indexOf","lastIndex"],"mappings":"AAAA;AACA;;AAEA,IAAIA,UAAUC,QAAQ,WAAR,CAAd;AACA,IAAIC,UAAUD,QAAQ,YAAR,CAAd;AACA,IAAIE,WAAWF,QAAQ,cAAR,CAAf;AACA,IAAIG,WAAWH,QAAQ,cAAR,CAAf;AACA,IAAII,WAAWJ,QAAQ,UAAR,CAAf;AACA,IAAIK,cAAcC,OAAOC,SAAzB;;AAEA,IAAIC,wBAAwB,SAAxBA,qBAAwB,CAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACpD,OAAKC,EAAL,GAAUF,MAAV;AACA,OAAKG,EAAL,GAAUF,MAAV;AACD,CAHD;;AAKAV,QAAQ,gBAAR,EAA0BQ,qBAA1B,EAAiD,eAAjD,EAAkE,SAASK,IAAT,GAAgB;AAChF,MAAIC,QAAQ,KAAKH,EAAL,CAAQI,IAAR,CAAa,KAAKH,EAAlB,CAAZ;AACA,SAAO,EAAEI,OAAOF,KAAT,EAAgBG,MAAMH,UAAU,IAAhC,EAAP;AACD,CAHD;;AAKAf,QAAQA,QAAQmB,CAAhB,EAAmB,QAAnB,EAA6B;AAC3BC,YAAU,SAASA,QAAT,CAAkBV,MAAlB,EAA0B;AAClCR,YAAQ,IAAR;AACA,QAAI,CAACE,SAASM,MAAT,CAAL,EAAuB,MAAMW,UAAUX,SAAS,mBAAnB,CAAN;AACvB,QAAIY,IAAIC,OAAO,IAAP,CAAR;AACA,QAAIC,QAAQ,WAAWlB,WAAX,GAAyBiB,OAAOb,OAAOc,KAAd,CAAzB,GAAgDnB,SAASoB,IAAT,CAAcf,MAAd,CAA5D;AACA,QAAIgB,KAAK,IAAInB,MAAJ,CAAWG,OAAOiB,MAAlB,EAA0B,CAACH,MAAMI,OAAN,CAAc,GAAd,CAAD,GAAsBJ,KAAtB,GAA8B,MAAMA,KAA9D,CAAT;AACAE,OAAGG,SAAH,GAAe1B,SAASO,OAAOmB,SAAhB,CAAf;AACA,WAAO,IAAIpB,qBAAJ,CAA0BiB,EAA1B,EAA8BJ,CAA9B,CAAP;AACD;AAT0B,CAA7B;AAWA","file":"es7.string.match-all.js","sourcesContent":["'use strict';\n// https://tc39.github.io/String.prototype.matchAll/\n\nvar $export = require('./_export');\nvar defined = require('./_defined');\nvar toLength = require('./_to-length');\nvar isRegExp = require('./_is-regexp');\nvar getFlags = require('./_flags');\nvar RegExpProto = RegExp.prototype;\n\nvar $RegExpStringIterator = function (regexp, string) {\n  this._r = regexp;\n  this._s = string;\n};\n\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\n  var match = this._r.exec(this._s);\n  return { value: match, done: match === null };\n});\n\n$export($export.P, 'String', {\n  matchAll: function matchAll(regexp) {\n    defined(this);\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\n    var S = String(this);\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\n    rx.lastIndex = toLength(regexp.lastIndex);\n    return new $RegExpStringIterator(rx, S);\n  }\n});\n//# sourceMappingURL=es7.string.match-all.js.map"]}