{"version":3,"sources":["../../../../node_modules/core-js/modules/es6.regexp.split.js"],"names":["require","defined","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","exec","undefined","separator","limit","string","String","call","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","RegExp","source","separator2","match","lastIndex","lastLength","i","index","slice","replace","arguments","apply","test","split","O","fn"],"mappings":"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","file":"es6.regexp.split.js","sourcesContent":["// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if ('abbc'[$SPLIT](/(b)*/)[1] == 'c' || 'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 || 'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 || '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 || '.'[$SPLIT](/()()/)[LENGTH] > 1 || ''[$SPLIT](/.?/)[LENGTH]) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.unicode ? 'u' : '') + (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n    // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n//# sourceMappingURL=es6.regexp.split.js.map"]}