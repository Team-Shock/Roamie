{"version":3,"sources":["../../../node_modules/invariant/invariant.js"],"names":["NODE_ENV","process","env","invariant","condition","format","a","b","c","d","e","f","undefined","Error","error","args","argIndex","replace","name","framesToPop","module","exports"],"mappings":"AAAA;;;;;;;AAOA;;AAEA;;;;;;;;;;;AAWA,IAAIA,WAAWC,QAAQC,GAAR,CAAYF,QAA3B;;AAEA,IAAIG,YAAY,SAAZA,SAAY,CAAUC,SAAV,EAAqBC,MAArB,EAA6BC,CAA7B,EAAgCC,CAAhC,EAAmCC,CAAnC,EAAsCC,CAAtC,EAAyCC,CAAzC,EAA4CC,CAA5C,EAA+C;AAC7D,MAAIX,aAAa,YAAjB,EAA+B;AAC7B,QAAIK,WAAWO,SAAf,EAA0B;AACxB,YAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACD;AACF;;AAED,MAAI,CAACT,SAAL,EAAgB;AACd,QAAIU,KAAJ;AACA,QAAIT,WAAWO,SAAf,EAA0B;AACxBE,cAAQ,IAAID,KAAJ,CAAU,uEAAuE,6DAAjF,CAAR;AACD,KAFD,MAEO;AACL,UAAIE,OAAO,CAACT,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,CAAX;AACA,UAAIK,WAAW,CAAf;AACAF,cAAQ,IAAID,KAAJ,CAAUR,OAAOY,OAAP,CAAe,KAAf,EAAsB,YAAY;AAClD,eAAOF,KAAKC,UAAL,CAAP;AACD,OAFiB,CAAV,CAAR;AAGAF,YAAMI,IAAN,GAAa,qBAAb;AACD;;AAEDJ,UAAMK,WAAN,GAAoB,CAApB,CAbc,CAaS;AACvB,UAAML,KAAN;AACD;AACF,CAvBD;;AAyBAM,OAAOC,OAAP,GAAiBlB,SAAjB;AACA","file":"invariant.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceMappingURL=invariant.js.map"]}